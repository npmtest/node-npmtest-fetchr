{"/home/travis/build/npmtest/node-npmtest-fetchr/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-fetchr/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":33}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_fetchr */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - init-after","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - init-after","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-fetchr/lib.npmtest_fetchr.js":{"path":"/home/travis/build/npmtest/node-npmtest-fetchr/lib.npmtest_fetchr.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":51}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":57}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_fetchr */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_fetchr = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_fetchr = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-fetchr/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-fetchr/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":50}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":64},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-fetchr && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_fetchr */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - init-before","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_fetchr","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // init-after","    // run browser js-env code - init-after","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - init-after","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_fetchr.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_fetchr.rollup.js'] =","            local.assetsDict['/assets.npmtest_fetchr.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_fetchr.__dirname + '/lib.npmtest_fetchr.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-fetchr/node_modules/fetchr/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-fetchr/node_modules/fetchr/index.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":43}}},"branchMap":{},"code":["/**"," * Copyright 2014, Yahoo! Inc."," * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","module.exports = require('./libs/fetcher');",""],"l":{"5":1}},"/home/travis/build/npmtest/node-npmtest-fetchr/node_modules/fetchr/libs/fetcher.js":{"path":"/home/travis/build/npmtest/node-npmtest-fetchr/node_modules/fetchr/libs/fetcher.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":0,"48":0,"49":1,"50":0,"51":0,"52":1,"53":0,"54":0,"55":1,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":1,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":1,"100":1,"101":0,"102":1,"103":0,"104":0,"105":0,"106":0,"107":0,"108":1,"109":0,"110":1,"111":0,"112":0,"113":0,"114":0,"115":1,"116":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":1,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":1,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":1,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":1,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":1,"209":0,"210":0,"211":1,"212":0,"213":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0,0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0,0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0},"fnMap":{"1":{"name":"parseValue","line":18,"loc":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}}},"2":{"name":"parseParamValues","line":35,"loc":{"start":{"line":35,"column":0},"end":{"line":35,"column":35}}},"3":{"name":"(anonymous_3)","line":36,"loc":{"start":{"line":36,"column":38},"end":{"line":36,"column":62}}},"4":{"name":"sanitizeResourceName","line":42,"loc":{"start":{"line":42,"column":0},"end":{"line":42,"column":40}}},"5":{"name":"getErrorResponse","line":52,"loc":{"start":{"line":52,"column":0},"end":{"line":52,"column":31}}},"6":{"name":"Request","line":85,"loc":{"start":{"line":85,"column":0},"end":{"line":85,"column":48}}},"7":{"name":"(anonymous_7)","line":109,"loc":{"start":{"line":109,"column":27},"end":{"line":109,"column":45}}},"8":{"name":"(anonymous_8)","line":121,"loc":{"start":{"line":121,"column":25},"end":{"line":121,"column":41}}},"9":{"name":"(anonymous_9)","line":132,"loc":{"start":{"line":132,"column":33},"end":{"line":132,"column":51}}},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":41},"end":{"line":144,"column":68}}},"11":{"name":"(anonymous_11)","line":171,"loc":{"start":{"line":171,"column":24},"end":{"line":171,"column":44}}},"12":{"name":"requestExecutor","line":175,"loc":{"start":{"line":175,"column":30},"end":{"line":175,"column":72}}},"13":{"name":"requestSucceeded","line":179,"loc":{"start":{"line":179,"column":27},"end":{"line":179,"column":61}}},"14":{"name":"requestFailed","line":182,"loc":{"start":{"line":182,"column":7},"end":{"line":182,"column":39}}},"15":{"name":"requestSucceeded","line":188,"loc":{"start":{"line":188,"column":21},"end":{"line":188,"column":55}}},"16":{"name":"requestFailed","line":190,"loc":{"start":{"line":190,"column":11},"end":{"line":190,"column":39}}},"17":{"name":"executeRequest","line":205,"loc":{"start":{"line":205,"column":0},"end":{"line":205,"column":51}}},"18":{"name":"executeRequestCallback","line":206,"loc":{"start":{"line":206,"column":87},"end":{"line":206,"column":136}}},"19":{"name":"Fetcher","line":248,"loc":{"start":{"line":248,"column":0},"end":{"line":248,"column":27}}},"20":{"name":"(anonymous_20)","line":263,"loc":{"start":{"line":263,"column":26},"end":{"line":263,"column":45}}},"21":{"name":"(anonymous_21)","line":278,"loc":{"start":{"line":278,"column":26},"end":{"line":278,"column":45}}},"22":{"name":"(anonymous_22)","line":295,"loc":{"start":{"line":295,"column":21},"end":{"line":295,"column":37}}},"23":{"name":"(anonymous_23)","line":311,"loc":{"start":{"line":311,"column":21},"end":{"line":311,"column":37}}},"24":{"name":"(anonymous_24)","line":327,"loc":{"start":{"line":327,"column":23},"end":{"line":327,"column":39}}},"25":{"name":"(anonymous_25)","line":347,"loc":{"start":{"line":347,"column":21},"end":{"line":347,"column":40}}},"26":{"name":"noOp","line":349,"loc":{"start":{"line":349,"column":57},"end":{"line":349,"column":87}}},"27":{"name":"(anonymous_27)","line":352,"loc":{"start":{"line":352,"column":11},"end":{"line":352,"column":37}}},"28":{"name":"(anonymous_28)","line":376,"loc":{"start":{"line":376,"column":21},"end":{"line":376,"column":42}}},"29":{"name":"(anonymous_29)","line":441,"loc":{"start":{"line":441,"column":21},"end":{"line":441,"column":41}}},"30":{"name":"(anonymous_30)","line":479,"loc":{"start":{"line":479,"column":25},"end":{"line":479,"column":71}}},"31":{"name":"(anonymous_31)","line":515,"loc":{"start":{"line":515,"column":27},"end":{"line":515,"column":79}}},"32":{"name":"(anonymous_32)","line":552,"loc":{"start":{"line":552,"column":27},"end":{"line":552,"column":79}}},"33":{"name":"(anonymous_33)","line":588,"loc":{"start":{"line":588,"column":30},"end":{"line":588,"column":76}}},"34":{"name":"(anonymous_34)","line":622,"loc":{"start":{"line":622,"column":34},"end":{"line":622,"column":53}}},"35":{"name":"(anonymous_35)","line":630,"loc":{"start":{"line":630,"column":35},"end":{"line":630,"column":47}}}},"statementMap":{"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":21}},"2":{"start":{"line":7,"column":0},"end":{"line":7,"column":25}},"3":{"start":{"line":8,"column":0},"end":{"line":8,"column":25}},"4":{"start":{"line":9,"column":0},"end":{"line":9,"column":25}},"5":{"start":{"line":10,"column":0},"end":{"line":10,"column":16}},"6":{"start":{"line":11,"column":0},"end":{"line":11,"column":32}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":39}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":31}},"9":{"start":{"line":14,"column":0},"end":{"line":14,"column":44}},"10":{"start":{"line":15,"column":0},"end":{"line":15,"column":63}},"11":{"start":{"line":16,"column":0},"end":{"line":16,"column":43}},"12":{"start":{"line":18,"column":0},"end":{"line":33,"column":1}},"13":{"start":{"line":20,"column":4},"end":{"line":32,"column":5}},"14":{"start":{"line":21,"column":8},"end":{"line":21,"column":36}},"15":{"start":{"line":26,"column":8},"end":{"line":28,"column":9}},"16":{"start":{"line":27,"column":12},"end":{"line":27,"column":24}},"17":{"start":{"line":29,"column":8},"end":{"line":29,"column":19}},"18":{"start":{"line":31,"column":8},"end":{"line":31,"column":21}},"19":{"start":{"line":35,"column":0},"end":{"line":40,"column":1}},"20":{"start":{"line":36,"column":4},"end":{"line":39,"column":11}},"21":{"start":{"line":37,"column":8},"end":{"line":37,"column":48}},"22":{"start":{"line":38,"column":8},"end":{"line":38,"column":22}},"23":{"start":{"line":42,"column":0},"end":{"line":44,"column":1}},"24":{"start":{"line":43,"column":4},"end":{"line":43,"column":81}},"25":{"start":{"line":52,"column":0},"end":{"line":68,"column":1}},"26":{"start":{"line":53,"column":4},"end":{"line":53,"column":43}},"27":{"start":{"line":54,"column":4},"end":{"line":56,"column":6}},"28":{"start":{"line":58,"column":4},"end":{"line":62,"column":5}},"29":{"start":{"line":59,"column":8},"end":{"line":59,"column":28}},"30":{"start":{"line":60,"column":11},"end":{"line":62,"column":5}},"31":{"start":{"line":61,"column":8},"end":{"line":61,"column":37}},"32":{"start":{"line":64,"column":4},"end":{"line":67,"column":6}},"33":{"start":{"line":85,"column":0},"end":{"line":100,"column":1}},"34":{"start":{"line":86,"column":4},"end":{"line":88,"column":5}},"35":{"start":{"line":87,"column":8},"end":{"line":87,"column":70}},"36":{"start":{"line":90,"column":4},"end":{"line":90,"column":42}},"37":{"start":{"line":91,"column":4},"end":{"line":91,"column":29}},"38":{"start":{"line":92,"column":4},"end":{"line":92,"column":28}},"39":{"start":{"line":93,"column":4},"end":{"line":93,"column":33}},"40":{"start":{"line":94,"column":4},"end":{"line":94,"column":49}},"41":{"start":{"line":95,"column":4},"end":{"line":95,"column":22}},"42":{"start":{"line":96,"column":4},"end":{"line":96,"column":22}},"43":{"start":{"line":97,"column":4},"end":{"line":97,"column":28}},"44":{"start":{"line":98,"column":4},"end":{"line":98,"column":24}},"45":{"start":{"line":99,"column":4},"end":{"line":99,"column":50}},"46":{"start":{"line":109,"column":0},"end":{"line":112,"column":2}},"47":{"start":{"line":110,"column":4},"end":{"line":110,"column":26}},"48":{"start":{"line":111,"column":4},"end":{"line":111,"column":16}},"49":{"start":{"line":121,"column":0},"end":{"line":124,"column":2}},"50":{"start":{"line":122,"column":4},"end":{"line":122,"column":22}},"51":{"start":{"line":123,"column":4},"end":{"line":123,"column":16}},"52":{"start":{"line":132,"column":0},"end":{"line":135,"column":2}},"53":{"start":{"line":133,"column":4},"end":{"line":133,"column":32}},"54":{"start":{"line":134,"column":4},"end":{"line":134,"column":16}},"55":{"start":{"line":144,"column":0},"end":{"line":163,"column":2}},"56":{"start":{"line":145,"column":4},"end":{"line":145,"column":20}},"57":{"start":{"line":146,"column":4},"end":{"line":146,"column":68}},"58":{"start":{"line":147,"column":4},"end":{"line":149,"column":5}},"59":{"start":{"line":148,"column":8},"end":{"line":148,"column":36}},"60":{"start":{"line":150,"column":4},"end":{"line":150,"column":46}},"61":{"start":{"line":151,"column":4},"end":{"line":162,"column":5}},"62":{"start":{"line":152,"column":8},"end":{"line":152,"column":41}},"63":{"start":{"line":153,"column":8},"end":{"line":160,"column":10}},"64":{"start":{"line":161,"column":8},"end":{"line":161,"column":30}},"65":{"start":{"line":171,"column":0},"end":{"line":196,"column":2}},"66":{"start":{"line":172,"column":4},"end":{"line":172,"column":20}},"67":{"start":{"line":173,"column":4},"end":{"line":173,"column":33}},"68":{"start":{"line":175,"column":4},"end":{"line":177,"column":7}},"69":{"start":{"line":176,"column":8},"end":{"line":176,"column":60}},"70":{"start":{"line":179,"column":4},"end":{"line":185,"column":7}},"71":{"start":{"line":180,"column":8},"end":{"line":180,"column":48}},"72":{"start":{"line":181,"column":8},"end":{"line":181,"column":22}},"73":{"start":{"line":183,"column":8},"end":{"line":183,"column":43}},"74":{"start":{"line":184,"column":8},"end":{"line":184,"column":26}},"75":{"start":{"line":187,"column":4},"end":{"line":195,"column":5}},"76":{"start":{"line":188,"column":8},"end":{"line":192,"column":11}},"77":{"start":{"line":189,"column":12},"end":{"line":189,"column":67}},"78":{"start":{"line":191,"column":12},"end":{"line":191,"column":40}},"79":{"start":{"line":194,"column":8},"end":{"line":194,"column":23}},"80":{"start":{"line":205,"column":0},"end":{"line":233,"column":1}},"81":{"start":{"line":206,"column":4},"end":{"line":218,"column":7}},"82":{"start":{"line":207,"column":8},"end":{"line":217,"column":9}},"83":{"start":{"line":208,"column":12},"end":{"line":211,"column":15}},"84":{"start":{"line":213,"column":12},"end":{"line":216,"column":15}},"85":{"start":{"line":219,"column":4},"end":{"line":219,"column":31}},"86":{"start":{"line":220,"column":4},"end":{"line":222,"column":5}},"87":{"start":{"line":221,"column":8},"end":{"line":221,"column":41}},"88":{"start":{"line":223,"column":4},"end":{"line":223,"column":16}},"89":{"start":{"line":224,"column":4},"end":{"line":232,"column":5}},"90":{"start":{"line":225,"column":8},"end":{"line":225,"column":55}},"91":{"start":{"line":226,"column":8},"end":{"line":228,"column":9}},"92":{"start":{"line":227,"column":10},"end":{"line":227,"column":96}},"93":{"start":{"line":229,"column":8},"end":{"line":229,"column":41}},"94":{"start":{"line":231,"column":8},"end":{"line":231,"column":27}},"95":{"start":{"line":248,"column":0},"end":{"line":252,"column":1}},"96":{"start":{"line":249,"column":4},"end":{"line":249,"column":33}},"97":{"start":{"line":250,"column":4},"end":{"line":250,"column":38}},"98":{"start":{"line":251,"column":4},"end":{"line":251,"column":27}},"99":{"start":{"line":254,"column":0},"end":{"line":254,"column":22}},"100":{"start":{"line":263,"column":0},"end":{"line":270,"column":2}},"101":{"start":{"line":269,"column":4},"end":{"line":269,"column":44}},"102":{"start":{"line":278,"column":0},"end":{"line":285,"column":2}},"103":{"start":{"line":279,"column":4},"end":{"line":281,"column":5}},"104":{"start":{"line":280,"column":8},"end":{"line":280,"column":60}},"105":{"start":{"line":282,"column":4},"end":{"line":282,"column":45}},"106":{"start":{"line":283,"column":4},"end":{"line":283,"column":48}},"107":{"start":{"line":284,"column":4},"end":{"line":284,"column":11}},"108":{"start":{"line":295,"column":0},"end":{"line":302,"column":2}},"109":{"start":{"line":301,"column":4},"end":{"line":301,"column":36}},"110":{"start":{"line":311,"column":0},"end":{"line":318,"column":2}},"111":{"start":{"line":313,"column":4},"end":{"line":313,"column":45}},"112":{"start":{"line":314,"column":4},"end":{"line":316,"column":5}},"113":{"start":{"line":315,"column":8},"end":{"line":315,"column":91}},"114":{"start":{"line":317,"column":4},"end":{"line":317,"column":19}},"115":{"start":{"line":327,"column":0},"end":{"line":329,"column":2}},"116":{"start":{"line":328,"column":4},"end":{"line":328,"column":56}},"117":{"start":{"line":347,"column":0},"end":{"line":461,"column":2}},"118":{"start":{"line":348,"column":4},"end":{"line":348,"column":28}},"119":{"start":{"line":349,"column":4},"end":{"line":351,"column":6}},"120":{"start":{"line":350,"column":8},"end":{"line":350,"column":20}},"121":{"start":{"line":352,"column":4},"end":{"line":460,"column":6}},"122":{"start":{"line":353,"column":8},"end":{"line":353,"column":20}},"123":{"start":{"line":354,"column":8},"end":{"line":354,"column":18}},"124":{"start":{"line":355,"column":8},"end":{"line":355,"column":24}},"125":{"start":{"line":357,"column":8},"end":{"line":458,"column":9}},"126":{"start":{"line":358,"column":12},"end":{"line":358,"column":53}},"127":{"start":{"line":359,"column":12},"end":{"line":359,"column":40}},"128":{"start":{"line":361,"column":12},"end":{"line":367,"column":13}},"129":{"start":{"line":362,"column":16},"end":{"line":364,"column":19}},"130":{"start":{"line":365,"column":16},"end":{"line":365,"column":40}},"131":{"start":{"line":366,"column":16},"end":{"line":366,"column":35}},"132":{"start":{"line":368,"column":12},"end":{"line":368,"column":29}},"133":{"start":{"line":369,"column":12},"end":{"line":373,"column":15}},"134":{"start":{"line":374,"column":12},"end":{"line":402,"column":19}},"135":{"start":{"line":377,"column":20},"end":{"line":377,"column":52}},"136":{"start":{"line":378,"column":20},"end":{"line":380,"column":21}},"137":{"start":{"line":379,"column":24},"end":{"line":379,"column":46}},"138":{"start":{"line":381,"column":20},"end":{"line":392,"column":21}},"139":{"start":{"line":382,"column":24},"end":{"line":382,"column":64}},"140":{"start":{"line":383,"column":24},"end":{"line":390,"column":25}},"141":{"start":{"line":384,"column":28},"end":{"line":387,"column":32}},"142":{"start":{"line":389,"column":28},"end":{"line":389,"column":117}},"143":{"start":{"line":391,"column":24},"end":{"line":391,"column":31}},"144":{"start":{"line":393,"column":20},"end":{"line":401,"column":21}},"145":{"start":{"line":394,"column":24},"end":{"line":397,"column":28}},"146":{"start":{"line":400,"column":24},"end":{"line":400,"column":70}},"147":{"start":{"line":404,"column":12},"end":{"line":404,"column":57}},"148":{"start":{"line":406,"column":12},"end":{"line":412,"column":13}},"149":{"start":{"line":407,"column":16},"end":{"line":409,"column":19}},"150":{"start":{"line":410,"column":16},"end":{"line":410,"column":40}},"151":{"start":{"line":411,"column":16},"end":{"line":411,"column":35}},"152":{"start":{"line":414,"column":12},"end":{"line":414,"column":36}},"153":{"start":{"line":415,"column":12},"end":{"line":415,"column":55}},"154":{"start":{"line":417,"column":12},"end":{"line":423,"column":13}},"155":{"start":{"line":418,"column":16},"end":{"line":420,"column":19}},"156":{"start":{"line":421,"column":16},"end":{"line":421,"column":40}},"157":{"start":{"line":422,"column":16},"end":{"line":422,"column":35}},"158":{"start":{"line":424,"column":12},"end":{"line":424,"column":52}},"159":{"start":{"line":425,"column":12},"end":{"line":431,"column":13}},"160":{"start":{"line":426,"column":16},"end":{"line":428,"column":19}},"161":{"start":{"line":429,"column":16},"end":{"line":429,"column":40}},"162":{"start":{"line":430,"column":16},"end":{"line":430,"column":35}},"163":{"start":{"line":432,"column":12},"end":{"line":432,"column":29}},"164":{"start":{"line":433,"column":12},"end":{"line":437,"column":15}},"165":{"start":{"line":438,"column":12},"end":{"line":457,"column":19}},"166":{"start":{"line":442,"column":20},"end":{"line":442,"column":52}},"167":{"start":{"line":443,"column":20},"end":{"line":445,"column":21}},"168":{"start":{"line":444,"column":24},"end":{"line":444,"column":46}},"169":{"start":{"line":446,"column":20},"end":{"line":450,"column":21}},"170":{"start":{"line":447,"column":24},"end":{"line":447,"column":64}},"171":{"start":{"line":448,"column":24},"end":{"line":448,"column":113}},"172":{"start":{"line":449,"column":24},"end":{"line":449,"column":31}},"173":{"start":{"line":451,"column":20},"end":{"line":451,"column":41}},"174":{"start":{"line":452,"column":20},"end":{"line":455,"column":23}},"175":{"start":{"line":456,"column":20},"end":{"line":456,"column":73}},"176":{"start":{"line":479,"column":0},"end":{"line":502,"column":2}},"177":{"start":{"line":480,"column":4},"end":{"line":484,"column":7}},"178":{"start":{"line":485,"column":4},"end":{"line":487,"column":5}},"179":{"start":{"line":486,"column":8},"end":{"line":486,"column":23}},"180":{"start":{"line":494,"column":4},"end":{"line":497,"column":5}},"181":{"start":{"line":495,"column":8},"end":{"line":495,"column":26}},"182":{"start":{"line":496,"column":8},"end":{"line":496,"column":20}},"183":{"start":{"line":498,"column":4},"end":{"line":501,"column":23}},"184":{"start":{"line":515,"column":0},"end":{"line":539,"column":2}},"185":{"start":{"line":516,"column":4},"end":{"line":520,"column":7}},"186":{"start":{"line":521,"column":4},"end":{"line":523,"column":5}},"187":{"start":{"line":522,"column":8},"end":{"line":522,"column":23}},"188":{"start":{"line":530,"column":4},"end":{"line":533,"column":5}},"189":{"start":{"line":531,"column":8},"end":{"line":531,"column":26}},"190":{"start":{"line":532,"column":8},"end":{"line":532,"column":20}},"191":{"start":{"line":534,"column":4},"end":{"line":538,"column":23}},"192":{"start":{"line":552,"column":0},"end":{"line":576,"column":2}},"193":{"start":{"line":553,"column":4},"end":{"line":557,"column":7}},"194":{"start":{"line":558,"column":4},"end":{"line":560,"column":5}},"195":{"start":{"line":559,"column":8},"end":{"line":559,"column":23}},"196":{"start":{"line":567,"column":4},"end":{"line":570,"column":5}},"197":{"start":{"line":568,"column":8},"end":{"line":568,"column":26}},"198":{"start":{"line":569,"column":8},"end":{"line":569,"column":20}},"199":{"start":{"line":571,"column":4},"end":{"line":575,"column":23}},"200":{"start":{"line":588,"column":0},"end":{"line":612,"column":2}},"201":{"start":{"line":589,"column":4},"end":{"line":593,"column":7}},"202":{"start":{"line":594,"column":4},"end":{"line":596,"column":5}},"203":{"start":{"line":595,"column":8},"end":{"line":595,"column":23}},"204":{"start":{"line":604,"column":4},"end":{"line":607,"column":5}},"205":{"start":{"line":605,"column":8},"end":{"line":605,"column":26}},"206":{"start":{"line":606,"column":8},"end":{"line":606,"column":20}},"207":{"start":{"line":608,"column":4},"end":{"line":611,"column":23}},"208":{"start":{"line":622,"column":0},"end":{"line":625,"column":2}},"209":{"start":{"line":623,"column":4},"end":{"line":623,"column":55}},"210":{"start":{"line":624,"column":4},"end":{"line":624,"column":38}},"211":{"start":{"line":630,"column":0},"end":{"line":632,"column":2}},"212":{"start":{"line":631,"column":4},"end":{"line":631,"column":29}},"213":{"start":{"line":634,"column":0},"end":{"line":634,"column":25}}},"branchMap":{"1":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":14},"end":{"line":15,"column":28}},{"start":{"line":15,"column":32},"end":{"line":15,"column":62}}]},"2":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":26,"column":8}},{"start":{"line":26,"column":8},"end":{"line":26,"column":8}}]},"3":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":12},"end":{"line":26,"column":35}},{"start":{"line":26,"column":39},"end":{"line":26,"column":68}}]},"4":{"line":43,"type":"cond-expr","locations":[{"start":{"line":43,"column":22},"end":{"line":43,"column":69}},{"start":{"line":43,"column":72},"end":{"line":43,"column":80}}]},"5":{"line":53,"type":"binary-expr","locations":[{"start":{"line":53,"column":21},"end":{"line":53,"column":35}},{"start":{"line":53,"column":39},"end":{"line":53,"column":42}}]},"6":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"7":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":11},"end":{"line":60,"column":11}},{"start":{"line":60,"column":11},"end":{"line":60,"column":11}}]},"8":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"9":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":21},"end":{"line":90,"column":30}},{"start":{"line":90,"column":34},"end":{"line":90,"column":41}}]},"10":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":14},"end":{"line":92,"column":21}},{"start":{"line":92,"column":25},"end":{"line":92,"column":27}}]},"11":{"line":93,"type":"binary-expr","locations":[{"start":{"line":93,"column":15},"end":{"line":93,"column":26}},{"start":{"line":93,"column":30},"end":{"line":93,"column":32}}]},"12":{"line":94,"type":"binary-expr","locations":[{"start":{"line":94,"column":23},"end":{"line":94,"column":42}},{"start":{"line":94,"column":46},"end":{"line":94,"column":48}}]},"13":{"line":146,"type":"binary-expr","locations":[{"start":{"line":146,"column":16},"end":{"line":146,"column":23}},{"start":{"line":146,"column":27},"end":{"line":146,"column":39}},{"start":{"line":146,"column":45},"end":{"line":146,"column":51}},{"start":{"line":146,"column":55},"end":{"line":146,"column":66}}]},"14":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":4},"end":{"line":147,"column":4}},{"start":{"line":147,"column":4},"end":{"line":147,"column":4}}]},"15":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":4},"end":{"line":151,"column":4}},{"start":{"line":151,"column":4},"end":{"line":151,"column":4}}]},"16":{"line":152,"type":"binary-expr","locations":[{"start":{"line":152,"column":18},"end":{"line":152,"column":25}},{"start":{"line":152,"column":29},"end":{"line":152,"column":40}}]},"17":{"line":157,"type":"cond-expr","locations":[{"start":{"line":157,"column":30},"end":{"line":157,"column":44}},{"start":{"line":157,"column":48},"end":{"line":157,"column":102}}]},"18":{"line":157,"type":"binary-expr","locations":[{"start":{"line":157,"column":48},"end":{"line":157,"column":54}},{"start":{"line":157,"column":58},"end":{"line":157,"column":69}},{"start":{"line":157,"column":73},"end":{"line":157,"column":95}},{"start":{"line":157,"column":99},"end":{"line":157,"column":102}}]},"19":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":4},"end":{"line":187,"column":4}},{"start":{"line":187,"column":4},"end":{"line":187,"column":4}}]},"20":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":8},"end":{"line":207,"column":8}},{"start":{"line":207,"column":8},"end":{"line":207,"column":8}}]},"21":{"line":220,"type":"if","locations":[{"start":{"line":220,"column":4},"end":{"line":220,"column":4}},{"start":{"line":220,"column":4},"end":{"line":220,"column":4}}]},"22":{"line":220,"type":"binary-expr","locations":[{"start":{"line":220,"column":9},"end":{"line":220,"column":25}},{"start":{"line":220,"column":31},"end":{"line":220,"column":47}}]},"23":{"line":226,"type":"if","locations":[{"start":{"line":226,"column":8},"end":{"line":226,"column":8}},{"start":{"line":226,"column":8},"end":{"line":226,"column":8}}]},"24":{"line":249,"type":"binary-expr","locations":[{"start":{"line":249,"column":19},"end":{"line":249,"column":26}},{"start":{"line":249,"column":30},"end":{"line":249,"column":32}}]},"25":{"line":250,"type":"binary-expr","locations":[{"start":{"line":250,"column":15},"end":{"line":250,"column":31}},{"start":{"line":250,"column":35},"end":{"line":250,"column":37}}]},"26":{"line":279,"type":"if","locations":[{"start":{"line":279,"column":4},"end":{"line":279,"column":4}},{"start":{"line":279,"column":4},"end":{"line":279,"column":4}}]},"27":{"line":279,"type":"binary-expr","locations":[{"start":{"line":279,"column":8},"end":{"line":279,"column":16}},{"start":{"line":279,"column":20},"end":{"line":279,"column":33}}]},"28":{"line":314,"type":"if","locations":[{"start":{"line":314,"column":4},"end":{"line":314,"column":4}},{"start":{"line":314,"column":4},"end":{"line":314,"column":4}}]},"29":{"line":328,"type":"binary-expr","locations":[{"start":{"line":328,"column":11},"end":{"line":328,"column":15}},{"start":{"line":328,"column":19},"end":{"line":328,"column":55}}]},"30":{"line":348,"type":"binary-expr","locations":[{"start":{"line":348,"column":14},"end":{"line":348,"column":21}},{"start":{"line":348,"column":25},"end":{"line":348,"column":27}}]},"31":{"line":349,"type":"binary-expr","locations":[{"start":{"line":349,"column":28},"end":{"line":349,"column":53}},{"start":{"line":349,"column":57},"end":{"line":351,"column":5}}]},"32":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":8},"end":{"line":357,"column":8}},{"start":{"line":357,"column":8},"end":{"line":357,"column":8}}]},"33":{"line":361,"type":"if","locations":[{"start":{"line":361,"column":12},"end":{"line":361,"column":12}},{"start":{"line":361,"column":12},"end":{"line":361,"column":12}}]},"34":{"line":377,"type":"binary-expr","locations":[{"start":{"line":377,"column":31},"end":{"line":377,"column":45}},{"start":{"line":377,"column":49},"end":{"line":377,"column":51}}]},"35":{"line":378,"type":"if","locations":[{"start":{"line":378,"column":20},"end":{"line":378,"column":20}},{"start":{"line":378,"column":20},"end":{"line":378,"column":20}}]},"36":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":20},"end":{"line":381,"column":20}},{"start":{"line":381,"column":20},"end":{"line":381,"column":20}}]},"37":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":24},"end":{"line":383,"column":24}},{"start":{"line":383,"column":24},"end":{"line":383,"column":24}}]},"38":{"line":383,"type":"binary-expr","locations":[{"start":{"line":383,"column":28},"end":{"line":383,"column":37}},{"start":{"line":383,"column":41},"end":{"line":383,"column":61}}]},"39":{"line":393,"type":"if","locations":[{"start":{"line":393,"column":20},"end":{"line":393,"column":20}},{"start":{"line":393,"column":20},"end":{"line":393,"column":20}}]},"40":{"line":394,"type":"binary-expr","locations":[{"start":{"line":394,"column":35},"end":{"line":394,"column":50}},{"start":{"line":394,"column":54},"end":{"line":394,"column":57}}]},"41":{"line":400,"type":"binary-expr","locations":[{"start":{"line":400,"column":35},"end":{"line":400,"column":50}},{"start":{"line":400,"column":54},"end":{"line":400,"column":57}}]},"42":{"line":404,"type":"binary-expr","locations":[{"start":{"line":404,"column":27},"end":{"line":404,"column":35}},{"start":{"line":404,"column":39},"end":{"line":404,"column":56}}]},"43":{"line":406,"type":"if","locations":[{"start":{"line":406,"column":12},"end":{"line":406,"column":12}},{"start":{"line":406,"column":12},"end":{"line":406,"column":12}}]},"44":{"line":406,"type":"binary-expr","locations":[{"start":{"line":406,"column":16},"end":{"line":406,"column":25}},{"start":{"line":406,"column":29},"end":{"line":406,"column":63}}]},"45":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":12},"end":{"line":417,"column":12}},{"start":{"line":417,"column":12},"end":{"line":417,"column":12}}]},"46":{"line":425,"type":"if","locations":[{"start":{"line":425,"column":12},"end":{"line":425,"column":12}},{"start":{"line":425,"column":12},"end":{"line":425,"column":12}}]},"47":{"line":425,"type":"binary-expr","locations":[{"start":{"line":425,"column":15},"end":{"line":425,"column":38}},{"start":{"line":425,"column":42},"end":{"line":425,"column":65}},{"start":{"line":425,"column":69},"end":{"line":425,"column":92}},{"start":{"line":425,"column":96},"end":{"line":425,"column":117}}]},"48":{"line":440,"type":"binary-expr","locations":[{"start":{"line":440,"column":22},"end":{"line":440,"column":40}},{"start":{"line":440,"column":44},"end":{"line":440,"column":46}}]},"49":{"line":442,"type":"binary-expr","locations":[{"start":{"line":442,"column":31},"end":{"line":442,"column":45}},{"start":{"line":442,"column":49},"end":{"line":442,"column":51}}]},"50":{"line":443,"type":"if","locations":[{"start":{"line":443,"column":20},"end":{"line":443,"column":20}},{"start":{"line":443,"column":20},"end":{"line":443,"column":20}}]},"51":{"line":446,"type":"if","locations":[{"start":{"line":446,"column":20},"end":{"line":446,"column":20}},{"start":{"line":446,"column":20},"end":{"line":446,"column":20}}]},"52":{"line":456,"type":"binary-expr","locations":[{"start":{"line":456,"column":31},"end":{"line":456,"column":46}},{"start":{"line":456,"column":50},"end":{"line":456,"column":53}}]},"53":{"line":485,"type":"if","locations":[{"start":{"line":485,"column":4},"end":{"line":485,"column":4}},{"start":{"line":485,"column":4},"end":{"line":485,"column":4}}]},"54":{"line":494,"type":"if","locations":[{"start":{"line":494,"column":4},"end":{"line":494,"column":4}},{"start":{"line":494,"column":4},"end":{"line":494,"column":4}}]},"55":{"line":521,"type":"if","locations":[{"start":{"line":521,"column":4},"end":{"line":521,"column":4}},{"start":{"line":521,"column":4},"end":{"line":521,"column":4}}]},"56":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":4},"end":{"line":530,"column":4}},{"start":{"line":530,"column":4},"end":{"line":530,"column":4}}]},"57":{"line":558,"type":"if","locations":[{"start":{"line":558,"column":4},"end":{"line":558,"column":4}},{"start":{"line":558,"column":4},"end":{"line":558,"column":4}}]},"58":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":4},"end":{"line":567,"column":4}},{"start":{"line":567,"column":4},"end":{"line":567,"column":4}}]},"59":{"line":594,"type":"if","locations":[{"start":{"line":594,"column":4},"end":{"line":594,"column":4}},{"start":{"line":594,"column":4},"end":{"line":594,"column":4}}]},"60":{"line":604,"type":"if","locations":[{"start":{"line":604,"column":4},"end":{"line":604,"column":4}},{"start":{"line":604,"column":4},"end":{"line":604,"column":4}}]},"61":{"line":624,"type":"binary-expr","locations":[{"start":{"line":624,"column":15},"end":{"line":624,"column":31}},{"start":{"line":624,"column":35},"end":{"line":624,"column":37}}]}},"code":["/**"," * Copyright 2014, Yahoo! Inc."," * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","var OP_READ = 'read';","var OP_CREATE = 'create';","var OP_UPDATE = 'update';","var OP_DELETE = 'delete';","var GET = 'GET';","var qs = require('querystring');","var debug = require('debug')('Fetchr');","var fumble = require('fumble');","var objectAssign = require('object-assign');","var Promise = global.Promise || require('es6-promise').Promise;","var RESOURCE_SANTIZER_REGEXP = /[^\\w\\.]+/g;","","function parseValue(value) {","    // take care of value of type: array, object","    try {","        var ret = JSON.parse(value);","        // Big interger, big decimal and the number in exponential notations will results","        // in unexpected form. e.g. 1234e1234 will be parsed into Infinity and the","        // number > MAX_SAFE_INTEGER will cause a rounding error.","        // So we will just leave them as strings instead.","        if (typeof ret === 'number' && String(value) !== String(ret)) {","            ret = value;","        }","        return ret;","    } catch (e) {","        return value;","    }","}","","function parseParamValues (params) {","    return Object.keys(params).reduce(function (parsed, curr) {","        parsed[curr] = parseValue(params[curr]);","        return parsed;","    }, {});","}","","function sanitizeResourceName(resource) {","    return resource ? resource.replace(RESOURCE_SANTIZER_REGEXP, '*') : resource;","}","","/**"," * Takes an error and resolves output and statusCode to respond to client with"," *"," * @param  {Error} JavaScript error"," * @return {Object} object with resolved statusCode & output"," */","function getErrorResponse(err) {","    var statusCode = err.statusCode || 500;","    var output = {","        message: 'request failed'","    };","","    if (typeof err.output !== 'undefined') {","        output = err.output;","    } else if (err.message) {","        output.message = err.message;","    }","","    return {","        statusCode: statusCode,","        output: output","    };","}","","","/**"," * A Request instance represents a single fetcher request."," * The constructor requires `operation` (CRUD) and `resource`."," * @class Request"," * @param {String} operation The CRUD operation name: 'create|read|update|delete'."," * @param {String} resource name of service"," * @param {Object} options configuration options for Request"," * @param {Object} [options.req] The request object from express/connect.  It can contain per-request/context data."," * @param {Array} [options.serviceMeta] Array to hold per-request/session metadata from all service calls."," * @param {Function} [options.statsCollector] The function will be invoked with 1 argument:"," *      the stats object, which contains resource, operation, params (request params),"," *      statusCode, err, and time (elapsed time)"," * @constructor"," */","function Request (operation, resource, options) {","    if (!resource) {","        throw new Error('Resource is required for a fetcher request');","    }","","    this.operation = operation || OP_READ;","    this.resource = resource;","    options = options || {};","    this.req = options.req || {};","    this.serviceMeta = options.serviceMeta || [];","    this._params = {};","    this._body = null;","    this._clientConfig = {};","    this._startTime = 0;","    this._statsCollector = options.statsCollector;","}","","/**"," * Add params to this fetcher request"," * @method params"," * @memberof Request"," * @param {Object} params Information carried in query and matrix parameters in typical REST API"," * @chainable"," */","Request.prototype.params = function (params) {","    this._params = params;","    return this;","};","/**"," * Add body to this fetcher request"," * @method body"," * @memberof Request"," * @param {Object} body The JSON object that contains the resource data being updated for this request."," *                      Not used for read and delete operations."," * @chainable"," */","Request.prototype.body = function (body) {","    this._body = body;","    return this;","};","/**"," * Add clientConfig to this fetcher request"," * @method config"," * @memberof Request"," * @param {Object} config config for this fetcher request"," * @chainable"," */","Request.prototype.clientConfig = function (config) {","    this._clientConfig = config;","    return this;","};","","/**"," * capture meta data; capture stats for this request and pass stats data"," * to options.statsCollector"," * @method _captureMetaAndStats"," * @param {Object} errData  The error response for failed request"," * @param {Object} result  The response data for successful request"," */","Request.prototype._captureMetaAndStats = function (errData, result) {","    var self = this;","    var meta = (errData && errData.meta) || (result && result.meta);","    if (meta) {","        self.serviceMeta.push(meta);","    }","    var statsCollector = self._statsCollector;","    if (typeof statsCollector === 'function') {","        var err = errData && errData.err;","        var stats = {","            resource: self.resource,","            operation: self.operation,","            params: self._params,","            statusCode: err ? err.statusCode : (result && result.meta && result.meta.statusCode || 200),","            err: err,","            time: Date.now() - self._startTime","        };","        statsCollector(stats);","    }","};","","/**"," * Execute this fetcher request and call callback."," * @method end"," * @memberof Request"," * @param {Fetcher~fetcherCallback} callback callback invoked when service is complete."," */","Request.prototype.end = function (callback) {","    var self = this;","    self._startTime = Date.now();","","    var promise = new Promise(function requestExecutor(resolve, reject) {","        setImmediate(executeRequest, self, resolve, reject);","    });","","    promise = promise.then(function requestSucceeded(result) {","        self._captureMetaAndStats(null, result);","        return result;","    }, function requestFailed(errData) {","        self._captureMetaAndStats(errData);","        throw errData.err;","    });","","    if (callback) {","        promise.then(function requestSucceeded(result) {","            setImmediate(callback, null, result.data, result.meta);","        }, function requestFailed(err) {","            setImmediate(callback, err);","        });","    } else {","        return promise;","    }","};","","/**"," * Execute and resolve/reject this fetcher request"," * @method executeRequest"," * @param {Object} request Request instance object"," * @param {Function} resolve function to call when request fulfilled"," * @param {Function} reject function to call when request rejected"," */","function executeRequest (request, resolve, reject) {","    var args = [request.req, request.resource, request._params, request._clientConfig, function executeRequestCallback(err, data, meta) {","        if (err) {","            reject({","                err: err,","                meta: meta","            });","        } else {","            resolve({","                data: data,","                meta: meta","            });","        }","    }];","    var op = request.operation;","    if ((op === OP_CREATE) || (op === OP_UPDATE)) {","        args.splice(3, 0, request._body);","    }","    var service;","    try {","        service = Fetcher.getService(request.resource);","        if (!service[op]) {","          throw new Error('operation: ' + op + ' is undefined on service: ' + request.resource);","        }","        service[op].apply(service, args);","    } catch (err) {","        reject({err: err});","    }","}","","/**"," * Fetcher class for the server."," * Provides interface to register data services and"," * to later access those services."," * @class Fetcher"," * @param {Object} options configuration options for Fetcher"," * @param {Object} [options.req] The express request object.  It can contain per-request/context data."," * @param {string} [options.xhrPath=\"/api\"] The path for XHR requests. Will be ignored server side."," * @param {Function} [options.statsCollector] The function will be invoked with 1 argument:"," *      the stats object, which contains resource, operation, params (request params),"," *      statusCode, err, and time (elapsed time)"," * @constructor"," */","function Fetcher (options) {","    this.options = options || {};","    this.req = this.options.req || {};","    this._serviceMeta = [];","}","","Fetcher.services = {};","","/**"," * DEPRECATED"," * Register a data fetcher"," * @method registerFetcher"," * @memberof Fetcher"," * @param {Function} fetcher"," */","Fetcher.registerFetcher = function (fetcher) {","    // TODO: Uncomment warnings in next minor release","    // if ('production' !== process.env.NODE_ENV) {","    //     console.warn('Fetcher.registerFetcher is deprecated. ' +","    //         'Please use Fetcher.registerService instead.');","    // }","    return Fetcher.registerService(fetcher);","};","","/**"," * Register a data service"," * @method registerService"," * @memberof Fetcher"," * @param {Function} service"," */","Fetcher.registerService = function (fetcher) {","    if (!fetcher || !fetcher.name) {","        throw new Error('Service is not defined correctly');","    }","    Fetcher.services[fetcher.name] = fetcher;","    debug('fetcher ' + fetcher.name + ' added');","    return;","};","","/**"," * DEPRECATED"," * Retrieve a data fetcher by name"," * @method getFetcher"," * @memberof Fetcher"," * @param {String} name of fetcher"," * @returns {Function} fetcher"," */","Fetcher.getFetcher = function (name) {","    // TODO: Uncomment warnings in next minor release","    // if ('production' !== process.env.NODE_ENV) {","    //     console.warn('Fetcher.getFetcher is deprecated. ' +","    //         'Please use Fetcher.getService instead.');","    // }","    return Fetcher.getService(name);","};","","/**"," * Retrieve a data service by name"," * @method getService"," * @memberof Fetcher"," * @param {String} name of service"," * @returns {Function} service"," */","Fetcher.getService = function (name) {","    //Access service by name","    var service = Fetcher.isRegistered(name);","    if (!service) {","        throw new Error('Service \"' + sanitizeResourceName(name) + '\" could not be found');","    }","    return service;","};","","/**"," * Returns true if service with name has been registered"," * @method isRegistered"," * @memberof Fetcher"," * @param {String} name of service"," * @returns {Boolean} true if service with name was registered"," */","Fetcher.isRegistered = function (name) {","    return name && Fetcher.services[name.split('.')[0]];","};","","/**"," * Returns express/connect middleware for Fetcher"," * @method middleware"," * @memberof Fetcher"," * @param {Object} [options] Optional configurations"," * @param {Function} [options.responseFormatter=no op function] Function to modify the response","            before sending to client. First argument is the HTTP request object,","            second argument is the HTTP response object and the third argument is the service data object."," * @param {Function} [options.statsCollector] The function will be invoked with 1 argument:","           the stats object, which contains resource, operation, params (request params),","           statusCode, err, and time (elapsed time)"," * @returns {Function} middleware"," *     @param {Object} req"," *     @param {Object} res"," *     @param {Object} next"," */","Fetcher.middleware = function (options) {","    options = options || {};","    var responseFormatter = options.responseFormatter || function noOp(req, res, data) {","        return data;","    };","    return function (req, res, next) {","        var request;","        var error;","        var serviceMeta;","","        if (req.method === GET) {","            var path = req.path.substr(1).split(';');","            var resource = path.shift();","","            if (!Fetcher.isRegistered(resource)) {","                error = fumble.http.badRequest('Invalid Fetchr Access', {","                    debug: 'Bad resource ' + sanitizeResourceName(resource)","                });","                error.source = 'fetchr';","                return next(error);","            }","            serviceMeta = [];","            request = new Request(OP_READ, resource, {","                req: req,","                serviceMeta: serviceMeta,","                statsCollector: options.statsCollector","            });","            request","                .params(parseParamValues(qs.parse(path.join('&'))))","                .end(function (err, data) {","                    var meta = serviceMeta[0] || {};","                    if (meta.headers) {","                        res.set(meta.headers);","                    }","                    if (err) {","                        var errResponse = getErrorResponse(err);","                        if (req.query && req.query.returnMeta) {","                            res.status(errResponse.statusCode).json(responseFormatter(req, res, {","                                output: errResponse.output,","                                meta: meta","                            }));","                        } else {","                            res.status(errResponse.statusCode).json(responseFormatter(req, res, errResponse.output));","                        }","                        return;","                    }","                    if (req.query.returnMeta) {","                        res.status(meta.statusCode || 200).json(responseFormatter(req, res, {","                            data: data,","                            meta: meta","                        }));","                    } else {","                        // TODO: Remove `returnMeta` feature flag after next release","                        res.status(meta.statusCode || 200).json(data);","                    }","                });","        } else {","            var requests = req.body && req.body.requests;","","            if (!requests || Object.keys(requests).length === 0) {","                error = fumble.http.badRequest('Invalid Fetchr Access', {","                    debug: 'No resources'","                });","                error.source = 'fetchr';","                return next(error);","            }","","            var DEFAULT_GUID = 'g0';","            var singleRequest = requests[DEFAULT_GUID];","","            if (!Fetcher.isRegistered(singleRequest.resource)) {","                error = fumble.http.badRequest('Invalid Fetchr Access', {","                    debug: 'Bad resource ' + sanitizeResourceName(singleRequest.resource)","                });","                error.source = 'fetchr';","                return next(error);","            }","            var operation = singleRequest.operation;","            if(operation !== OP_CREATE && operation !== OP_UPDATE && operation !== OP_DELETE && operation !== OP_READ) {","                error = fumble.http.badRequest('Invalid Fetchr Access', {","                    debug: 'Unsupported operation : operation must be create or read or update or delete'","                });","                error.source = 'fetchr';","                return next(error);","            }","            serviceMeta = [];","            request = new Request(operation, singleRequest.resource, {","                req: req,","                serviceMeta: serviceMeta,","                statsCollector: options.statsCollector","            });","            request","                .params(singleRequest.params)","                .body(singleRequest.body || {})","                .end(function(err, data) {","                    var meta = serviceMeta[0] || {};","                    if (meta.headers) {","                        res.set(meta.headers);","                    }","                    if (err) {","                        var errResponse = getErrorResponse(err);","                        res.status(errResponse.statusCode).json(responseFormatter(req, res, errResponse.output));","                        return;","                    }","                    var responseObj = {};","                    responseObj[DEFAULT_GUID] = responseFormatter(req, res, {","                        data: data,","                        meta: meta","                    });","                    res.status(meta.statusCode || 200).json(responseObj);","                });","        }","        // TODO: Batching and multi requests","    };","};","","","// ------------------------------------------------------------------","// CRUD Data Access Wrapper Methods","// ------------------------------------------------------------------","","/**"," * read operation (read as in CRUD)."," * @method read"," * @memberof Fetcher.prototype"," * @param {String} resource  The resource name"," * @param {Object} params    The parameters identify the resource, and along with information"," *                           carried in query and matrix parameters in typical REST API"," * @param {Object} [config={}] The config object.  It can contain \"config\" for per-request config data."," * @param {Fetcher~fetcherCallback} callback callback invoked when fetcher is complete."," * @static"," */","Fetcher.prototype.read = function (resource, params, config, callback) {","    var request = new Request('read', resource, {","        req: this.req,","        serviceMeta: this._serviceMeta,","        statsCollector: this.options.statsCollector","    });","    if (1 === arguments.length) {","        return request;","    }","    // TODO: Uncomment warnings in next minor release","    // if ('production' !== process.env.NODE_ENV) {","    //     console.warn('The recommended way to use fetcher\\'s .read method is \\n' +","    //         '.read(\\'' + resource + '\\').params({foo:bar}).end(callback);');","    // }","    // TODO: Remove below this line in release after next","    if (typeof config === 'function') {","        callback = config;","        config = {};","    }","    return request","        .params(params)","        .clientConfig(config)","        .end(callback);","};","/**"," * create operation (create as in CRUD)."," * @method create"," * @memberof Fetcher.prototype"," * @param {String} resource  The resource name"," * @param {Object} params    The parameters identify the resource, and along with information"," *                           carried in query and matrix parameters in typical REST API"," * @param {Object} body      The JSON object that contains the resource data that is being created"," * @param {Object} [config={}] The config object.  It can contain \"config\" for per-request config data."," * @param {Fetcher~fetcherCallback} callback callback invoked when fetcher is complete."," * @static"," */","Fetcher.prototype.create = function (resource, params, body, config, callback) {","    var request = new Request('create', resource, {","        req: this.req,","        serviceMeta: this._serviceMeta,","        statsCollector: this.options.statsCollector","    });","    if (1 === arguments.length) {","        return request;","    }","    // TODO: Uncomment warnings in next minor release","    // if ('production' !== process.env.NODE_ENV) {","    //     console.warn('The recommended way to use fetcher\\'s .create method is \\n' +","    //         '.create(\\'' + resource + '\\').params({foo:bar}).body({}).end(callback);');","    // }","    // TODO: Remove below this line in release after next","    if (typeof config === 'function') {","        callback = config;","        config = {};","    }","    return request","        .params(params)","        .body(body)","        .clientConfig(config)","        .end(callback);","};","/**"," * update operation (update as in CRUD)."," * @method update"," * @memberof Fetcher.prototype"," * @param {String} resource  The resource name"," * @param {Object} params    The parameters identify the resource, and along with information"," *                           carried in query and matrix parameters in typical REST API"," * @param {Object} body      The JSON object that contains the resource data that is being updated"," * @param {Object} [config={}] The config object.  It can contain \"config\" for per-request config data."," * @param {Fetcher~fetcherCallback} callback callback invoked when fetcher is complete."," * @static"," */","Fetcher.prototype.update = function (resource, params, body, config, callback) {","    var request = new Request('update', resource, {","        req: this.req,","        serviceMeta: this._serviceMeta,","        statsCollector: this.options.statsCollector","    });","    if (1 === arguments.length) {","        return request;","    }","    // TODO: Uncomment warnings in next minor release","    // if ('production' !== process.env.NODE_ENV) {","    //     console.warn('The recommended way to use fetcher\\'s .update method is \\n' +","    //         '.update(\\'' + resource + '\\').params({foo:bar}).body({}).end(callback);');","    // }","    // TODO: Remove below this line in release after next","    if (typeof config === 'function') {","        callback = config;","        config = {};","    }","    return request","        .params(params)","        .body(body)","        .clientConfig(config)","        .end(callback);","};","/**"," * delete operation (delete as in CRUD)."," * @method delete"," * @memberof Fetcher.prototype"," * @param {String} resource  The resource name"," * @param {Object} params    The parameters identify the resource, and along with information"," *                           carried in query and matrix parameters in typical REST API"," * @param {Object} [config={}] The config object.  It can contain \"config\" for per-request config data."," * @param {Fetcher~fetcherCallback} callback callback invoked when fetcher is complete."," * @static"," */","Fetcher.prototype['delete'] = function (resource, params, config, callback) {","    var request = new Request('delete', resource, {","        req: this.req,","        serviceMeta: this._serviceMeta,","        statsCollector: this.options.statsCollector","    });","    if (1 === arguments.length) {","        return request;","    }","","    // TODO: Uncomment warnings in next minor release","    // if ('production' !== process.env.NODE_ENV) {","    //     console.warn('The recommended way to use fetcher\\'s .read method is \\n' +","    //         '.read(\\'' + resource + '\\').params({foo:bar}).end(callback);');","    // }","    // TODO: Remove below this line in release after next","    if (typeof config === 'function') {","        callback = config;","        config = {};","    }","    return request","        .params(params)","        .clientConfig(config)","        .end(callback);","};","","/**"," * update fetchr options"," * @method updateOptions"," * @memberof Fetcher.prototype"," * @param {Object} options configuration options for Fetcher"," * @param {Object} [options.req] The request object.  It can contain per-request/context data."," * @param {string} [options.xhrPath=\"/api\"] The path for XHR requests. Will be ignored server side."," */","Fetcher.prototype.updateOptions = function (options) {","    this.options = objectAssign(this.options, options);","    this.req = this.options.req || {};","};","","/**"," * Get all the aggregated metadata sent data services in this request"," */","Fetcher.prototype.getServiceMeta = function () {","    return this._serviceMeta;","};","","module.exports = Fetcher;","","/**"," * @callback Fetcher~fetcherCallback"," * @param {Object} err  The request error, pass null if there was no error. The data and meta parameters will be ignored if this parameter is not null."," * @param {number} [err.statusCode=500] http status code to return"," * @param {string} [err.message=request failed] http response body"," * @param {Object} data request result"," * @param {Object} [meta] request meta-data"," * @param {number} [meta.statusCode=200] http status code to return"," */",""],"l":{"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"18":1,"20":0,"21":0,"26":0,"27":0,"29":0,"31":0,"35":1,"36":0,"37":0,"38":0,"42":1,"43":0,"52":1,"53":0,"54":0,"58":0,"59":0,"60":0,"61":0,"64":0,"85":1,"86":0,"87":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"109":1,"110":0,"111":0,"121":1,"122":0,"123":0,"132":1,"133":0,"134":0,"144":1,"145":0,"146":0,"147":0,"148":0,"150":0,"151":0,"152":0,"153":0,"161":0,"171":1,"172":0,"173":0,"175":0,"176":0,"179":0,"180":0,"181":0,"183":0,"184":0,"187":0,"188":0,"189":0,"191":0,"194":0,"205":1,"206":0,"207":0,"208":0,"213":0,"219":0,"220":0,"221":0,"223":0,"224":0,"225":0,"226":0,"227":0,"229":0,"231":0,"248":1,"249":0,"250":0,"251":0,"254":1,"263":1,"269":0,"278":1,"279":0,"280":0,"282":0,"283":0,"284":0,"295":1,"301":0,"311":1,"313":0,"314":0,"315":0,"317":0,"327":1,"328":0,"347":1,"348":0,"349":0,"350":0,"352":0,"353":0,"354":0,"355":0,"357":0,"358":0,"359":0,"361":0,"362":0,"365":0,"366":0,"368":0,"369":0,"374":0,"377":0,"378":0,"379":0,"381":0,"382":0,"383":0,"384":0,"389":0,"391":0,"393":0,"394":0,"400":0,"404":0,"406":0,"407":0,"410":0,"411":0,"414":0,"415":0,"417":0,"418":0,"421":0,"422":0,"424":0,"425":0,"426":0,"429":0,"430":0,"432":0,"433":0,"438":0,"442":0,"443":0,"444":0,"446":0,"447":0,"448":0,"449":0,"451":0,"452":0,"456":0,"479":1,"480":0,"485":0,"486":0,"494":0,"495":0,"496":0,"498":0,"515":1,"516":0,"521":0,"522":0,"530":0,"531":0,"532":0,"534":0,"552":1,"553":0,"558":0,"559":0,"567":0,"568":0,"569":0,"571":0,"588":1,"589":0,"594":0,"595":0,"604":0,"605":0,"606":0,"608":0,"622":1,"623":0,"624":0,"630":1,"631":0,"634":1}},"/home/travis/build/npmtest/node-npmtest-fetchr/node_modules/fetchr/libs/fetcher.client.js":{"path":"/home/travis/build/npmtest/node-npmtest-fetchr/node_modules/fetchr/libs/fetcher.client.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":1,"37":0,"38":0,"39":1,"40":0,"41":0,"42":1,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":1,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":1,"122":0,"123":0,"124":1,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0,0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"fnMap":{"1":{"name":"parseResponse","line":30,"loc":{"start":{"line":30,"column":0},"end":{"line":30,"column":33}}},"2":{"name":"pickContext","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":47}}},"3":{"name":"Request","line":69,"loc":{"start":{"line":69,"column":0},"end":{"line":69,"column":48}}},"4":{"name":"(anonymous_4)","line":99,"loc":{"start":{"line":99,"column":27},"end":{"line":99,"column":45}}},"5":{"name":"(anonymous_5)","line":112,"loc":{"start":{"line":112,"column":25},"end":{"line":112,"column":41}}},"6":{"name":"(anonymous_6)","line":124,"loc":{"start":{"line":124,"column":33},"end":{"line":124,"column":51}}},"7":{"name":"(anonymous_7)","line":136,"loc":{"start":{"line":136,"column":41},"end":{"line":136,"column":64}}},"8":{"name":"(anonymous_8)","line":163,"loc":{"start":{"line":163,"column":24},"end":{"line":163,"column":44}}},"9":{"name":"requestSucceeded","line":168,"loc":{"start":{"line":168,"column":36},"end":{"line":168,"column":70}}},"10":{"name":"requestFailed","line":171,"loc":{"start":{"line":171,"column":11},"end":{"line":171,"column":39}}},"11":{"name":"requestExecutor","line":176,"loc":{"start":{"line":176,"column":34},"end":{"line":176,"column":76}}},"12":{"name":"requestSucceeded","line":180,"loc":{"start":{"line":180,"column":31},"end":{"line":180,"column":65}}},"13":{"name":"requestFailed","line":183,"loc":{"start":{"line":183,"column":11},"end":{"line":183,"column":39}}},"14":{"name":"executeRequest","line":198,"loc":{"start":{"line":198,"column":0},"end":{"line":198,"column":51}}},"15":{"name":"getDone","line":245,"loc":{"start":{"line":245,"column":114},"end":{"line":245,"column":146}}},"16":{"name":"postDone","line":270,"loc":{"start":{"line":270,"column":153},"end":{"line":270,"column":186}}},"17":{"name":"(anonymous_17)","line":291,"loc":{"start":{"line":291,"column":39},"end":{"line":291,"column":54}}},"18":{"name":"eachContext","line":294,"loc":{"start":{"line":294,"column":90},"end":{"line":294,"column":117}}},"19":{"name":"Fetcher","line":322,"loc":{"start":{"line":322,"column":0},"end":{"line":322,"column":27}}},"20":{"name":"(anonymous_20)","line":352,"loc":{"start":{"line":352,"column":12},"end":{"line":352,"column":70}}},"21":{"name":"(anonymous_21)","line":379,"loc":{"start":{"line":379,"column":10},"end":{"line":379,"column":62}}},"22":{"name":"(anonymous_22)","line":406,"loc":{"start":{"line":406,"column":12},"end":{"line":406,"column":70}}},"23":{"name":"(anonymous_23)","line":433,"loc":{"start":{"line":433,"column":14},"end":{"line":433,"column":66}}},"24":{"name":"(anonymous_24)","line":453,"loc":{"start":{"line":453,"column":19},"end":{"line":453,"column":38}}},"25":{"name":"(anonymous_25)","line":464,"loc":{"start":{"line":464,"column":20},"end":{"line":464,"column":32}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":12,"column":41}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":45}},"3":{"start":{"line":14,"column":0},"end":{"line":21,"column":6}},"4":{"start":{"line":22,"column":0},"end":{"line":22,"column":24}},"5":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}},"6":{"start":{"line":24,"column":0},"end":{"line":24,"column":31}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":23}},"8":{"start":{"line":26,"column":0},"end":{"line":26,"column":21}},"9":{"start":{"line":27,"column":0},"end":{"line":27,"column":70}},"10":{"start":{"line":28,"column":0},"end":{"line":28,"column":63}},"11":{"start":{"line":30,"column":0},"end":{"line":40,"column":1}},"12":{"start":{"line":31,"column":4},"end":{"line":38,"column":5}},"13":{"start":{"line":32,"column":8},"end":{"line":37,"column":9}},"14":{"start":{"line":33,"column":12},"end":{"line":33,"column":53}},"15":{"start":{"line":35,"column":12},"end":{"line":35,"column":53}},"16":{"start":{"line":36,"column":12},"end":{"line":36,"column":24}},"17":{"start":{"line":39,"column":4},"end":{"line":39,"column":16}},"18":{"start":{"line":49,"column":0},"end":{"line":55,"column":1}},"19":{"start":{"line":50,"column":4},"end":{"line":53,"column":5}},"20":{"start":{"line":51,"column":8},"end":{"line":51,"column":88}},"21":{"start":{"line":52,"column":8},"end":{"line":52,"column":50}},"22":{"start":{"line":54,"column":4},"end":{"line":54,"column":19}},"23":{"start":{"line":69,"column":0},"end":{"line":90,"column":1}},"24":{"start":{"line":70,"column":4},"end":{"line":72,"column":5}},"25":{"start":{"line":71,"column":8},"end":{"line":71,"column":70}},"26":{"start":{"line":74,"column":4},"end":{"line":74,"column":42}},"27":{"start":{"line":75,"column":4},"end":{"line":75,"column":29}},"28":{"start":{"line":76,"column":4},"end":{"line":85,"column":6}},"29":{"start":{"line":86,"column":4},"end":{"line":86,"column":22}},"30":{"start":{"line":87,"column":4},"end":{"line":87,"column":22}},"31":{"start":{"line":88,"column":4},"end":{"line":88,"column":28}},"32":{"start":{"line":89,"column":4},"end":{"line":89,"column":24}},"33":{"start":{"line":99,"column":0},"end":{"line":102,"column":2}},"34":{"start":{"line":100,"column":4},"end":{"line":100,"column":32}},"35":{"start":{"line":101,"column":4},"end":{"line":101,"column":16}},"36":{"start":{"line":112,"column":0},"end":{"line":115,"column":2}},"37":{"start":{"line":113,"column":4},"end":{"line":113,"column":30}},"38":{"start":{"line":114,"column":4},"end":{"line":114,"column":16}},"39":{"start":{"line":124,"column":0},"end":{"line":127,"column":2}},"40":{"start":{"line":125,"column":4},"end":{"line":125,"column":38}},"41":{"start":{"line":126,"column":4},"end":{"line":126,"column":16}},"42":{"start":{"line":136,"column":0},"end":{"line":154,"column":2}},"43":{"start":{"line":137,"column":4},"end":{"line":137,"column":20}},"44":{"start":{"line":138,"column":4},"end":{"line":138,"column":60}},"45":{"start":{"line":139,"column":4},"end":{"line":141,"column":5}},"46":{"start":{"line":140,"column":8},"end":{"line":140,"column":45}},"47":{"start":{"line":142,"column":4},"end":{"line":142,"column":53}},"48":{"start":{"line":143,"column":4},"end":{"line":153,"column":5}},"49":{"start":{"line":144,"column":8},"end":{"line":151,"column":10}},"50":{"start":{"line":152,"column":8},"end":{"line":152,"column":30}},"51":{"start":{"line":163,"column":0},"end":{"line":189,"column":2}},"52":{"start":{"line":164,"column":4},"end":{"line":164,"column":20}},"53":{"start":{"line":165,"column":4},"end":{"line":165,"column":33}},"54":{"start":{"line":167,"column":4},"end":{"line":188,"column":5}},"55":{"start":{"line":168,"column":8},"end":{"line":174,"column":11}},"56":{"start":{"line":169,"column":12},"end":{"line":169,"column":52}},"57":{"start":{"line":170,"column":12},"end":{"line":170,"column":87}},"58":{"start":{"line":172,"column":12},"end":{"line":172,"column":43}},"59":{"start":{"line":173,"column":12},"end":{"line":173,"column":40}},"60":{"start":{"line":176,"column":8},"end":{"line":179,"column":11}},"61":{"start":{"line":177,"column":12},"end":{"line":177,"column":129}},"62":{"start":{"line":178,"column":12},"end":{"line":178,"column":64}},"63":{"start":{"line":180,"column":8},"end":{"line":186,"column":11}},"64":{"start":{"line":181,"column":12},"end":{"line":181,"column":52}},"65":{"start":{"line":182,"column":12},"end":{"line":182,"column":26}},"66":{"start":{"line":184,"column":12},"end":{"line":184,"column":43}},"67":{"start":{"line":185,"column":12},"end":{"line":185,"column":22}},"68":{"start":{"line":187,"column":8},"end":{"line":187,"column":23}},"69":{"start":{"line":198,"column":0},"end":{"line":283,"column":1}},"70":{"start":{"line":199,"column":4},"end":{"line":199,"column":45}},"71":{"start":{"line":200,"column":4},"end":{"line":200,"column":17}},"72":{"start":{"line":201,"column":4},"end":{"line":201,"column":25}},"73":{"start":{"line":202,"column":4},"end":{"line":202,"column":31}},"74":{"start":{"line":203,"column":4},"end":{"line":203,"column":17}},"75":{"start":{"line":204,"column":4},"end":{"line":204,"column":15}},"76":{"start":{"line":205,"column":4},"end":{"line":205,"column":13}},"77":{"start":{"line":207,"column":4},"end":{"line":209,"column":5}},"78":{"start":{"line":208,"column":8},"end":{"line":208,"column":85}},"79":{"start":{"line":211,"column":4},"end":{"line":211,"column":75}},"80":{"start":{"line":214,"column":4},"end":{"line":241,"column":5}},"81":{"start":{"line":215,"column":8},"end":{"line":215,"column":127}},"82":{"start":{"line":216,"column":8},"end":{"line":216,"column":175}},"83":{"start":{"line":218,"column":8},"end":{"line":222,"column":9},"skip":true},"84":{"start":{"line":221,"column":12},"end":{"line":221,"column":138},"skip":true},"85":{"start":{"line":234,"column":8},"end":{"line":234,"column":61}},"86":{"start":{"line":235,"column":8},"end":{"line":235,"column":37}},"87":{"start":{"line":236,"column":8},"end":{"line":240,"column":9}},"88":{"start":{"line":237,"column":12},"end":{"line":237,"column":26}},"89":{"start":{"line":239,"column":12},"end":{"line":239,"column":28}},"90":{"start":{"line":243,"column":4},"end":{"line":243,"column":78}},"91":{"start":{"line":244,"column":4},"end":{"line":252,"column":5}},"92":{"start":{"line":245,"column":8},"end":{"line":251,"column":11}},"93":{"start":{"line":246,"column":12},"end":{"line":249,"column":13}},"94":{"start":{"line":247,"column":16},"end":{"line":247,"column":103}},"95":{"start":{"line":248,"column":16},"end":{"line":248,"column":35}},"96":{"start":{"line":250,"column":12},"end":{"line":250,"column":45}},"97":{"start":{"line":255,"column":4},"end":{"line":255,"column":18}},"98":{"start":{"line":256,"column":4},"end":{"line":260,"column":6}},"99":{"start":{"line":261,"column":4},"end":{"line":263,"column":5}},"100":{"start":{"line":262,"column":8},"end":{"line":262,"column":52}},"101":{"start":{"line":264,"column":4},"end":{"line":267,"column":6}},"102":{"start":{"line":268,"column":4},"end":{"line":268,"column":42}},"103":{"start":{"line":269,"column":4},"end":{"line":269,"column":55}},"104":{"start":{"line":270,"column":4},"end":{"line":282,"column":7}},"105":{"start":{"line":271,"column":8},"end":{"line":274,"column":9}},"106":{"start":{"line":272,"column":12},"end":{"line":272,"column":99}},"107":{"start":{"line":273,"column":12},"end":{"line":273,"column":31}},"108":{"start":{"line":275,"column":8},"end":{"line":275,"column":45}},"109":{"start":{"line":276,"column":8},"end":{"line":280,"column":9}},"110":{"start":{"line":277,"column":12},"end":{"line":277,"column":48}},"111":{"start":{"line":279,"column":12},"end":{"line":279,"column":24}},"112":{"start":{"line":281,"column":8},"end":{"line":281,"column":24}},"113":{"start":{"line":291,"column":0},"end":{"line":301,"column":2}},"114":{"start":{"line":292,"column":4},"end":{"line":292,"column":19}},"115":{"start":{"line":293,"column":4},"end":{"line":293,"column":24}},"116":{"start":{"line":294,"column":4},"end":{"line":296,"column":7}},"117":{"start":{"line":295,"column":8},"end":{"line":295,"column":52}},"118":{"start":{"line":297,"column":4},"end":{"line":299,"column":5}},"119":{"start":{"line":298,"column":8},"end":{"line":298,"column":50}},"120":{"start":{"line":300,"column":4},"end":{"line":300,"column":21}},"121":{"start":{"line":322,"column":0},"end":{"line":334,"column":1}},"122":{"start":{"line":323,"column":4},"end":{"line":323,"column":27}},"123":{"start":{"line":324,"column":4},"end":{"line":333,"column":6}},"124":{"start":{"line":336,"column":0},"end":{"line":467,"column":2}},"125":{"start":{"line":353,"column":8},"end":{"line":353,"column":68}},"126":{"start":{"line":354,"column":8},"end":{"line":356,"column":9}},"127":{"start":{"line":355,"column":12},"end":{"line":355,"column":27}},"128":{"start":{"line":358,"column":8},"end":{"line":361,"column":9}},"129":{"start":{"line":359,"column":12},"end":{"line":359,"column":36}},"130":{"start":{"line":360,"column":12},"end":{"line":360,"column":30}},"131":{"start":{"line":362,"column":8},"end":{"line":366,"column":27}},"132":{"start":{"line":380,"column":8},"end":{"line":380,"column":66}},"133":{"start":{"line":381,"column":8},"end":{"line":383,"column":9}},"134":{"start":{"line":382,"column":12},"end":{"line":382,"column":27}},"135":{"start":{"line":385,"column":8},"end":{"line":388,"column":9}},"136":{"start":{"line":386,"column":12},"end":{"line":386,"column":36}},"137":{"start":{"line":387,"column":12},"end":{"line":387,"column":30}},"138":{"start":{"line":389,"column":8},"end":{"line":392,"column":27}},"139":{"start":{"line":407,"column":8},"end":{"line":407,"column":68}},"140":{"start":{"line":408,"column":8},"end":{"line":410,"column":9}},"141":{"start":{"line":409,"column":12},"end":{"line":409,"column":27}},"142":{"start":{"line":412,"column":8},"end":{"line":415,"column":9}},"143":{"start":{"line":413,"column":12},"end":{"line":413,"column":36}},"144":{"start":{"line":414,"column":12},"end":{"line":414,"column":30}},"145":{"start":{"line":416,"column":8},"end":{"line":420,"column":27}},"146":{"start":{"line":434,"column":8},"end":{"line":434,"column":68}},"147":{"start":{"line":435,"column":8},"end":{"line":437,"column":9}},"148":{"start":{"line":436,"column":12},"end":{"line":436,"column":27}},"149":{"start":{"line":439,"column":8},"end":{"line":442,"column":9}},"150":{"start":{"line":440,"column":12},"end":{"line":440,"column":36}},"151":{"start":{"line":441,"column":12},"end":{"line":441,"column":30}},"152":{"start":{"line":443,"column":8},"end":{"line":446,"column":27}},"153":{"start":{"line":454,"column":8},"end":{"line":454,"column":59}},"154":{"start":{"line":465,"column":8},"end":{"line":465,"column":33}},"155":{"start":{"line":469,"column":0},"end":{"line":469,"column":25}}},"branchMap":{"1":{"line":28,"type":"binary-expr","locations":[{"start":{"line":28,"column":14},"end":{"line":28,"column":28}},{"start":{"line":28,"column":32},"end":{"line":28,"column":62}}]},"2":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":31,"column":4}},{"start":{"line":31,"column":4},"end":{"line":31,"column":4}}]},"3":{"line":31,"type":"binary-expr","locations":[{"start":{"line":31,"column":8},"end":{"line":31,"column":16}},{"start":{"line":31,"column":20},"end":{"line":31,"column":41}}]},"4":{"line":50,"type":"if","locations":[{"start":{"line":50,"column":4},"end":{"line":50,"column":4}},{"start":{"line":50,"column":4},"end":{"line":50,"column":4}}]},"5":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":8},"end":{"line":50,"column":14}},{"start":{"line":50,"column":18},"end":{"line":50,"column":32}}]},"6":{"line":51,"type":"cond-expr","locations":[{"start":{"line":51,"column":60},"end":{"line":51,"column":73}},{"start":{"line":51,"column":76},"end":{"line":51,"column":87}}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":4},"end":{"line":70,"column":4}},{"start":{"line":70,"column":4},"end":{"line":70,"column":4}}]},"8":{"line":74,"type":"binary-expr","locations":[{"start":{"line":74,"column":21},"end":{"line":74,"column":30}},{"start":{"line":74,"column":34},"end":{"line":74,"column":41}}]},"9":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":17},"end":{"line":78,"column":32}},{"start":{"line":78,"column":36},"end":{"line":78,"column":52}}]},"10":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":20},"end":{"line":79,"column":38}},{"start":{"line":79,"column":42},"end":{"line":79,"column":61}}]},"11":{"line":81,"type":"binary-expr","locations":[{"start":{"line":81,"column":17},"end":{"line":81,"column":32}},{"start":{"line":81,"column":36},"end":{"line":81,"column":38}}]},"12":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":23},"end":{"line":82,"column":44}},{"start":{"line":82,"column":48},"end":{"line":82,"column":50}}]},"13":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":22},"end":{"line":84,"column":42}},{"start":{"line":84,"column":46},"end":{"line":84,"column":48}}]},"14":{"line":100,"type":"binary-expr","locations":[{"start":{"line":100,"column":19},"end":{"line":100,"column":25}},{"start":{"line":100,"column":29},"end":{"line":100,"column":31}}]},"15":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":17},"end":{"line":113,"column":21}},{"start":{"line":113,"column":25},"end":{"line":113,"column":29}}]},"16":{"line":125,"type":"binary-expr","locations":[{"start":{"line":125,"column":25},"end":{"line":125,"column":31}},{"start":{"line":125,"column":35},"end":{"line":125,"column":37}}]},"17":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":16},"end":{"line":138,"column":19}},{"start":{"line":138,"column":23},"end":{"line":138,"column":31}},{"start":{"line":138,"column":37},"end":{"line":138,"column":43}},{"start":{"line":138,"column":47},"end":{"line":138,"column":58}}]},"18":{"line":139,"type":"if","locations":[{"start":{"line":139,"column":4},"end":{"line":139,"column":4}},{"start":{"line":139,"column":4},"end":{"line":139,"column":4}}]},"19":{"line":143,"type":"if","locations":[{"start":{"line":143,"column":4},"end":{"line":143,"column":4}},{"start":{"line":143,"column":4},"end":{"line":143,"column":4}}]},"20":{"line":148,"type":"cond-expr","locations":[{"start":{"line":148,"column":30},"end":{"line":148,"column":44}},{"start":{"line":148,"column":47},"end":{"line":148,"column":50}}]},"21":{"line":167,"type":"if","locations":[{"start":{"line":167,"column":4},"end":{"line":167,"column":4}},{"start":{"line":167,"column":4},"end":{"line":167,"column":4}}]},"22":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":41},"end":{"line":170,"column":47}},{"start":{"line":170,"column":51},"end":{"line":170,"column":62}}]},"23":{"line":170,"type":"binary-expr","locations":[{"start":{"line":170,"column":64},"end":{"line":170,"column":70}},{"start":{"line":170,"column":74},"end":{"line":170,"column":85}}]},"24":{"line":207,"type":"if","locations":[{"start":{"line":207,"column":4},"end":{"line":207,"column":4}},{"start":{"line":207,"column":4},"end":{"line":207,"column":4}}]},"25":{"line":208,"type":"cond-expr","locations":[{"start":{"line":208,"column":34},"end":{"line":208,"column":58}},{"start":{"line":208,"column":61},"end":{"line":208,"column":84}}]},"26":{"line":211,"type":"binary-expr","locations":[{"start":{"line":211,"column":15},"end":{"line":211,"column":44}},{"start":{"line":211,"column":48},"end":{"line":211,"column":74}}]},"27":{"line":214,"type":"if","locations":[{"start":{"line":214,"column":4},"end":{"line":214,"column":4}},{"start":{"line":214,"column":4},"end":{"line":214,"column":4}}]},"28":{"line":215,"type":"cond-expr","locations":[{"start":{"line":215,"column":73},"end":{"line":215,"column":101}},{"start":{"line":215,"column":104},"end":{"line":215,"column":126}}]},"29":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":8},"end":{"line":218,"column":8},"skip":true},{"start":{"line":218,"column":8},"end":{"line":218,"column":8},"skip":true}]},"30":{"line":234,"type":"cond-expr","locations":[{"start":{"line":234,"column":51},"end":{"line":234,"column":54}},{"start":{"line":234,"column":57},"end":{"line":234,"column":60}}]},"31":{"line":236,"type":"if","locations":[{"start":{"line":236,"column":8},"end":{"line":236,"column":8}},{"start":{"line":236,"column":8},"end":{"line":236,"column":8}}]},"32":{"line":243,"type":"binary-expr","locations":[{"start":{"line":243,"column":24},"end":{"line":243,"column":44}},{"start":{"line":243,"column":48},"end":{"line":243,"column":71}},{"start":{"line":243,"column":75},"end":{"line":243,"column":77}}]},"33":{"line":244,"type":"if","locations":[{"start":{"line":244,"column":4},"end":{"line":244,"column":4}},{"start":{"line":244,"column":4},"end":{"line":244,"column":4}}]},"34":{"line":246,"type":"if","locations":[{"start":{"line":246,"column":12},"end":{"line":246,"column":12}},{"start":{"line":246,"column":12},"end":{"line":246,"column":12}}]},"35":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":4},"end":{"line":261,"column":4}},{"start":{"line":261,"column":4},"end":{"line":261,"column":4}}]},"36":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":8},"end":{"line":271,"column":8}},{"start":{"line":271,"column":8},"end":{"line":271,"column":8}}]},"37":{"line":276,"type":"if","locations":[{"start":{"line":276,"column":8},"end":{"line":276,"column":8}},{"start":{"line":276,"column":8},"end":{"line":276,"column":8}}]},"38":{"line":277,"type":"binary-expr","locations":[{"start":{"line":277,"column":21},"end":{"line":277,"column":41}},{"start":{"line":277,"column":45},"end":{"line":277,"column":47}}]},"39":{"line":297,"type":"if","locations":[{"start":{"line":297,"column":4},"end":{"line":297,"column":4}},{"start":{"line":297,"column":4},"end":{"line":297,"column":4}}]},"40":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":8},"end":{"line":354,"column":8}},{"start":{"line":354,"column":8},"end":{"line":354,"column":8}}]},"41":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":8},"end":{"line":358,"column":8}},{"start":{"line":358,"column":8},"end":{"line":358,"column":8}}]},"42":{"line":381,"type":"if","locations":[{"start":{"line":381,"column":8},"end":{"line":381,"column":8}},{"start":{"line":381,"column":8},"end":{"line":381,"column":8}}]},"43":{"line":385,"type":"if","locations":[{"start":{"line":385,"column":8},"end":{"line":385,"column":8}},{"start":{"line":385,"column":8},"end":{"line":385,"column":8}}]},"44":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":8},"end":{"line":408,"column":8}},{"start":{"line":408,"column":8},"end":{"line":408,"column":8}}]},"45":{"line":412,"type":"if","locations":[{"start":{"line":412,"column":8},"end":{"line":412,"column":8}},{"start":{"line":412,"column":8},"end":{"line":412,"column":8}}]},"46":{"line":435,"type":"if","locations":[{"start":{"line":435,"column":8},"end":{"line":435,"column":8}},{"start":{"line":435,"column":8},"end":{"line":435,"column":8}}]},"47":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":8},"end":{"line":439,"column":8}},{"start":{"line":439,"column":8},"end":{"line":439,"column":8}}]}},"code":["/**"," * Copyright 2014, Yahoo! Inc."," * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","","/*jslint plusplus:true,nomen:true */","","/**"," * Fetcher is a CRUD interface for your data."," * @module Fetcher"," */","var REST = require('./util/http.client');","var debug = require('debug')('FetchrClient');","var lodash = {","        isFunction: require('lodash/isFunction'),","        forEach: require('lodash/forEach'),","        merge: require('lodash/merge'),","        noop: require('lodash/noop'),","        pickBy: require('lodash/pickBy'),","        pick: require('lodash/pick')","    };","var DEFAULT_GUID = 'g0';","var DEFAULT_XHR_PATH = '/api';","var DEFAULT_XHR_TIMEOUT = 3000;","var MAX_URI_LEN = 2048;","var OP_READ = 'read';","var defaultConstructGetUri = require('./util/defaultConstructGetUri');","var Promise = global.Promise || require('es6-promise').Promise;","","function parseResponse(response) {","    if (response && response.responseText) {","        try {","            return JSON.parse(response.responseText);","        } catch (e) {","            debug('json parse failed:' + e, 'error');","            return null;","        }","    }","    return null;","}","","/**"," * Pick keys from the context object"," * @method pickContext"," * @param {Object} context context object"," * @param {Function|Array|String} picker picker object w/iteratee for lodash/pickBy|pick"," * @param {String} method method name, get or post"," */","function pickContext (context, picker, method) {","    if (picker && picker[method]) {","        var libPicker = lodash.isFunction(picker[method]) ? lodash.pickBy : lodash.pick;","        return libPicker(context, picker[method]);","    }","    return context;","}","","/**"," * A RequestClient instance represents a single fetcher request."," * The constructor requires `operation` (CRUD) and `resource`."," * @class RequestClient"," * @param {String} operation The CRUD operation name: 'create|read|update|delete'."," * @param {String} resource name of fetcher/service"," * @param {Object} options configuration options for Request"," * @param {Array} [options._serviceMeta] Array to hold per-request/session metadata from all service calls."," * Data will be pushed on to this array while the Fetchr instance maintains the reference for this session."," *"," * @constructor"," */","function Request (operation, resource, options) {","    if (!resource) {","        throw new Error('Resource is required for a fetcher request');","    }","","    this.operation = operation || OP_READ;","    this.resource = resource;","    this.options = {","        headers: options.headers,","        xhrPath: options.xhrPath || DEFAULT_XHR_PATH,","        xhrTimeout: options.xhrTimeout || DEFAULT_XHR_TIMEOUT,","        corsPath: options.corsPath,","        context: options.context || {},","        contextPicker: options.contextPicker || {},","        statsCollector: options.statsCollector,","        _serviceMeta: options._serviceMeta || []","    };","    this._params = {};","    this._body = null;","    this._clientConfig = {};","    this._startTime = 0;","}","","/**"," * Add params to this fetcher request"," * @method params"," * @memberof Request"," * @param {Object} params Information carried in query and matrix parameters in typical REST API"," * @chainable"," */","Request.prototype.params = function (params) {","    this._params = params || {};","    return this;","};","","/**"," * Add body to this fetcher request"," * @method body"," * @memberof Request"," * @param {Object} body The JSON object that contains the resource data being updated for this request."," *                      Not used for read and delete operations."," * @chainable"," */","Request.prototype.body = function (body) {","    this._body = body || null;","    return this;","};","","/**"," * Add clientConfig to this fetcher request"," * @method clientConfig"," * @memberof Request"," * @param {Object} config config for this fetcher request"," * @chainable"," */","Request.prototype.clientConfig = function (config) {","    this._clientConfig = config || {};","    return this;","};","","/**"," * capture meta data; capture stats for this request and pass stats data"," * to options.statsCollector"," * @method _captureMetaAndStats"," * @param {Object} err  The error response for failed request"," * @param {Object} result  The response data for successful request"," */","Request.prototype._captureMetaAndStats = function (err, result) {","    var self = this;","    var meta = (err && err.meta) || (result && result.meta);","    if (meta) {","        self.options._serviceMeta.push(meta);","    }","    var statsCollector = self.options.statsCollector;","    if (typeof statsCollector === 'function') {","        var stats = {","            resource: self.resource,","            operation: self.operation,","            params: self._params,","            statusCode: err ? err.statusCode : 200,","            err: err,","            time: Date.now() - self._startTime","        };","        statsCollector(stats);","    }","};","","/**"," * Execute this fetcher request and call callback."," * @method end"," * @memberof Request"," * @param {Fetcher~fetcherCallback} callback callback invoked when fetcher/service is complete."," * @async"," */","Request.prototype.end = function (callback) {","    var self = this;","    self._startTime = Date.now();","","    if (callback) {","        return executeRequest(self, function requestSucceeded(result) {","            self._captureMetaAndStats(null, result);","            setImmediate(callback, null, result && result.data, result && result.meta);","        }, function requestFailed(err) {","            self._captureMetaAndStats(err);","            setImmediate(callback, err);","        });","    } else {","        var promise = new Promise(function requestExecutor(resolve, reject) {","            debug('Executing request %s.%s with params %o and body %o', self.resource, self.operation, self._params, self._body);","            setImmediate(executeRequest, self, resolve, reject);","        });","        promise = promise.then(function requestSucceeded(result) {","            self._captureMetaAndStats(null, result);","            return result;","        }, function requestFailed(err) {","            self._captureMetaAndStats(err);","            throw err;","        });","        return promise;","    }","};","","/**"," * Execute and resolve/reject this fetcher request"," * @method executeRequest"," * @param {Object} request Request instance object"," * @param {Function} resolve function to call when request fulfilled"," * @param {Function} reject function to call when request rejected"," */","function executeRequest (request, resolve, reject) {","    var clientConfig = request._clientConfig;","    var use_post;","    var allow_retry_post;","    var uri = clientConfig.uri;","    var requests;","    var params;","    var data;","","    if (!uri) {","        uri = clientConfig.cors ? request.options.corsPath : request.options.xhrPath;","    }","","    use_post = request.operation !== OP_READ || clientConfig.post_for_read;","    // We use GET request by default for READ operation, but you can override that behavior","    // by specifying {post_for_read: true} in your request's clientConfig","    if (!use_post) {","        var getUriFn = lodash.isFunction(clientConfig.constructGetUri) ? clientConfig.constructGetUri : defaultConstructGetUri;","        var get_uri = getUriFn.call(request, uri, request.resource, request._params, clientConfig, pickContext(request.options.context, request.options.contextPicker, 'GET'));","        /* istanbul ignore next */","        if (!get_uri) {","            // If a custom getUriFn returns falsy value, we should run defaultConstructGetUri","            // TODO: Add test for this fallback","            get_uri = defaultConstructGetUri.call(request, uri, request.resource, request._params, clientConfig, request.options.context);","        }","        // TODO: Remove `returnMeta` feature flag after next release","        // This feature flag will enable the new return format for GET api requests","        // Whereas before any data from services was returned as is. We now return","        // an object with a data key containing the service response, and a meta key","        // containing the service's metadata response (i.e headers and statusCode).","        // We need this feature flag to be truly backwards compatible because it is","        // concievable that some active browser sessions could have the old version of","        // client fetcher while the server upgrades to the new version. This could be","        // easily fixed by refreshing the browser, but the feature flag will ensure","        // old fetcher clients will receive the old format and the new client will","        // receive the new format","        get_uri += (get_uri.indexOf('?') !== -1) ? '&' : '?';","        get_uri += 'returnMeta=true';","        if (get_uri.length <= MAX_URI_LEN) {","            uri = get_uri;","        } else {","            use_post = true;","        }","    }","","    var customHeaders = clientConfig.headers || request.options.headers || {};","    if (!use_post) {","        return REST.get(uri, customHeaders, lodash.merge({xhrTimeout: request.options.xhrTimeout}, clientConfig), function getDone(err, response) {","            if (err) {","                debug('Syncing ' + request.resource + ' failed: statusCode=' + err.statusCode, 'info');","                return reject(err);","            }","            resolve(parseResponse(response));","        });","    }","","    // individual request is also normalized into a request hash to pass to api","    requests = {};","    requests[DEFAULT_GUID] = {","        resource: request.resource,","        operation: request.operation,","        params: request._params","    };","    if (request._body) {","        requests[DEFAULT_GUID].body = request._body;","    }","    data = {","        requests: requests,","        context: request.options.context","    }; // TODO: remove. leave here for now for backward compatibility","    uri = request._constructGroupUri(uri);","    allow_retry_post = (request.operation === OP_READ);","    return REST.post(uri, customHeaders, data, lodash.merge({unsafeAllowRetry: allow_retry_post, xhrTimeout: request.options.xhrTimeout}, clientConfig), function postDone(err, response) {","        if (err) {","            debug('Syncing ' + request.resource + ' failed: statusCode=' + err.statusCode, 'info');","            return reject(err);","        }","        var result = parseResponse(response);","        if (result) {","            result = result[DEFAULT_GUID] || {};","        } else {","            result = {};","        }","        resolve(result);","    });","}","","/**"," * Build a final uri by adding query params to base uri from this.context"," * @method _constructGroupUri"," * @param {String} uri the base uri"," * @private"," */","Request.prototype._constructGroupUri = function (uri) {","    var query = [];","    var final_uri = uri;","    lodash.forEach(pickContext(this.options.context, this.options.contextPicker, 'POST'), function eachContext(v, k) {","        query.push(k + '=' + encodeURIComponent(v));","    });","    if (query.length > 0) {","        final_uri += '?' + query.sort().join('&');","    }","    return final_uri;","};","","/**"," * Fetcher class for the client. Provides CRUD methods."," * @class FetcherClient"," * @param {Object} options configuration options for Fetcher"," * @param {String} [options.xhrPath=\"/api\"] The path for XHR requests"," * @param {Number} [options.xhrTimout=3000] Timeout in milliseconds for all XHR requests"," * @param {Boolean} [options.corsPath] Base CORS path in case CORS is enabled"," * @param {Object} [options.context] The context object that is propagated to all outgoing"," *      requests as query params.  It can contain current-session/context data that should"," *      persist to all requests."," * @param {Object} [options.contextPicker] The context picker for GET and POST, they must be"," *      lodash pick predicate function with three arguments (value, key, object)"," * @param {Function|String|String[]} [options.contextPicker.GET] GET context picker"," * @param {Function|String|String[]} [options.contextPicker.POST] POST context picker"," * @param {Function} [options.statsCollector] The function will be invoked with 1 argument:"," *      the stats object, which contains resource, operation, params (request params),"," *      statusCode, err, and time (elapsed time)"," */","","function Fetcher (options) {","    this._serviceMeta = [];","    this.options = {","        headers: options.headers,","        xhrPath: options.xhrPath,","        xhrTimeout: options.xhrTimeout,","        corsPath: options.corsPath,","        context: options.context,","        contextPicker: options.contextPicker,","        statsCollector: options.statsCollector,","        _serviceMeta: this._serviceMeta","    };","}","","Fetcher.prototype = {","    // ------------------------------------------------------------------","    // Data Access Wrapper Methods","    // ------------------------------------------------------------------","","    /**","     * create operation (create as in CRUD).","     * @method create","     * @param {String} resource     The resource name","     * @param {Object} params       The parameters identify the resource, and along with information","     *                              carried in query and matrix parameters in typical REST API","     * @param {Object} body         The JSON object that contains the resource data that is being created","     * @param {Object} clientConfig The \"config\" object for per-request config data.","     * @param {Function} callback   callback convention is the same as Node.js","     * @static","     */","    create: function (resource, params, body, clientConfig, callback) {","        var request = new Request('create', resource, this.options);","        if (1 === arguments.length) {","            return request;","        }","        // TODO: Remove below this line in release after next","        if (typeof clientConfig === 'function') {","            callback = clientConfig;","            clientConfig = {};","        }","        return request","            .params(params)","            .body(body)","            .clientConfig(clientConfig)","            .end(callback);","    },","","    /**","     * read operation (read as in CRUD).","     * @method read","     * @param {String} resource     The resource name","     * @param {Object} params       The parameters identify the resource, and along with information","     *                              carried in query and matrix parameters in typical REST API","     * @param {Object} clientConfig The \"config\" object for per-request config data.","     * @param {Function} callback   callback convention is the same as Node.js","     * @static","     */","    read: function (resource, params, clientConfig, callback) {","        var request = new Request('read', resource, this.options);","        if (1 === arguments.length) {","            return request;","        }","        // TODO: Remove below this line in release after next","        if (typeof clientConfig === 'function') {","            callback = clientConfig;","            clientConfig = {};","        }","        return request","            .params(params)","            .clientConfig(clientConfig)","            .end(callback);","    },","","    /**","     * update operation (update as in CRUD).","     * @method update","     * @param {String} resource     The resource name","     * @param {Object} params       The parameters identify the resource, and along with information","     *                              carried in query and matrix parameters in typical REST API","     * @param {Object} body         The JSON object that contains the resource data that is being updated","     * @param {Object} clientConfig The \"config\" object for per-request config data.","     * @param {Function} callback   callback convention is the same as Node.js","     * @static","     */","    update: function (resource, params, body, clientConfig, callback) {","        var request = new Request('update', resource, this.options);","        if (1 === arguments.length) {","            return request;","        }","        // TODO: Remove below this line in release after next","        if (typeof clientConfig === 'function') {","            callback = clientConfig;","            clientConfig = {};","        }","        return request","            .params(params)","            .body(body)","            .clientConfig(clientConfig)","            .end(callback);","    },","","    /**","     * delete operation (delete as in CRUD).","     * @method delete","     * @param {String} resource     The resource name","     * @param {Object} params       The parameters identify the resource, and along with information","     *                              carried in query and matrix parameters in typical REST API","     * @param {Object} clientConfig The \"config\" object for per-request config data.","     * @param {Function} callback   callback convention is the same as Node.js","     * @static","     */","    'delete': function (resource, params, clientConfig, callback) {","        var request = new Request('delete', resource, this.options);","        if (1 === arguments.length) {","            return request;","        }","        // TODO: Remove below this line in release after next","        if (typeof clientConfig === 'function') {","            callback = clientConfig;","            clientConfig = {};","        }","        return request","            .params(params)","            .clientConfig(clientConfig)","            .end(callback);","    },","","    /**","     * Update options","     * @method updateOptions","     */","    updateOptions: function (options) {","        this.options = lodash.merge(this.options, options);","    },","","    /**","     * get the serviceMeta array.","     * The array contains all xhr meta returned in this session","     * with the 0 index being the first call.","     * @method getServiceMeta","     * @return {Array} array of metadata returned by each service call","     */","    getServiceMeta: function () {","        return this._serviceMeta;","    }","};","","module.exports = Fetcher;",""],"l":{"12":1,"13":1,"14":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"30":1,"31":0,"32":0,"33":0,"35":0,"36":0,"39":0,"49":1,"50":0,"51":0,"52":0,"54":0,"69":1,"70":0,"71":0,"74":0,"75":0,"76":0,"86":0,"87":0,"88":0,"89":0,"99":1,"100":0,"101":0,"112":1,"113":0,"114":0,"124":1,"125":0,"126":0,"136":1,"137":0,"138":0,"139":0,"140":0,"142":0,"143":0,"144":0,"152":0,"163":1,"164":0,"165":0,"167":0,"168":0,"169":0,"170":0,"172":0,"173":0,"176":0,"177":0,"178":0,"180":0,"181":0,"182":0,"184":0,"185":0,"187":0,"198":1,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"207":0,"208":0,"211":0,"214":0,"215":0,"216":0,"218":1,"221":1,"234":0,"235":0,"236":0,"237":0,"239":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"250":0,"255":0,"256":0,"261":0,"262":0,"264":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"275":0,"276":0,"277":0,"279":0,"281":0,"291":1,"292":0,"293":0,"294":0,"295":0,"297":0,"298":0,"300":0,"322":1,"323":0,"324":0,"336":1,"353":0,"354":0,"355":0,"358":0,"359":0,"360":0,"362":0,"380":0,"381":0,"382":0,"385":0,"386":0,"387":0,"389":0,"407":0,"408":0,"409":0,"412":0,"413":0,"414":0,"416":0,"434":0,"435":0,"436":0,"439":0,"440":0,"441":0,"443":0,"454":0,"465":0,"469":1}},"/home/travis/build/npmtest/node-npmtest-fetchr/node_modules/fetchr/libs/util/http.client.js":{"path":"/home/travis/build/npmtest/node-npmtest-fetchr/node_modules/fetchr/libs/util/http.client.js","s":{"1":1,"2":1,"3":0,"4":0,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":1,"19":0,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":1,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":1,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0},"b":{"1":[0,1],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0,0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0,0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"fnMap":{"1":{"name":"(anonymous_1)","line":39,"loc":{"start":{"line":39,"column":26},"end":{"line":39,"column":38}}},"2":{"name":"normalizeHeaders","line":44,"loc":{"start":{"line":44,"column":0},"end":{"line":44,"column":51}}},"3":{"name":"(anonymous_3)","line":50,"loc":{"start":{"line":50,"column":23},"end":{"line":50,"column":43}}},"4":{"name":"isContentTypeJSON","line":67,"loc":{"start":{"line":67,"column":0},"end":{"line":67,"column":36}}},"5":{"name":"(anonymous_5)","line":72,"loc":{"start":{"line":72,"column":52},"end":{"line":72,"column":68}}},"6":{"name":"shouldRetry","line":77,"loc":{"start":{"line":77,"column":0},"end":{"line":77,"column":49}}},"7":{"name":"mergeConfig","line":90,"loc":{"start":{"line":90,"column":0},"end":{"line":90,"column":29}}},"8":{"name":"doXhr","line":133,"loc":{"start":{"line":133,"column":0},"end":{"line":133,"column":61}}},"9":{"name":"(anonymous_9)","line":149,"loc":{"start":{"line":149,"column":22},"end":{"line":149,"column":47}}},"10":{"name":"(anonymous_10)","line":152,"loc":{"start":{"line":152,"column":22},"end":{"line":152,"column":47}}},"11":{"name":"retryXHR","line":157,"loc":{"start":{"line":157,"column":24},"end":{"line":157,"column":44}}},"12":{"name":"io","line":170,"loc":{"start":{"line":170,"column":0},"end":{"line":170,"column":26}}},"13":{"name":"(anonymous_13)","line":179,"loc":{"start":{"line":179,"column":7},"end":{"line":179,"column":34}}},"14":{"name":"(anonymous_14)","line":240,"loc":{"start":{"line":240,"column":10},"end":{"line":240,"column":52}}},"15":{"name":"(anonymous_15)","line":256,"loc":{"start":{"line":256,"column":10},"end":{"line":256,"column":58}}},"16":{"name":"(anonymous_16)","line":273,"loc":{"start":{"line":273,"column":11},"end":{"line":273,"column":59}}},"17":{"name":"(anonymous_17)","line":288,"loc":{"start":{"line":288,"column":15},"end":{"line":288,"column":57}}}},"statementMap":{"1":{"start":{"line":16,"column":0},"end":{"line":35,"column":25}},"2":{"start":{"line":38,"column":0},"end":{"line":42,"column":1}},"3":{"start":{"line":39,"column":2},"end":{"line":41,"column":4}},"4":{"start":{"line":40,"column":4},"end":{"line":40,"column":42}},"5":{"start":{"line":44,"column":0},"end":{"line":65,"column":1}},"6":{"start":{"line":45,"column":4},"end":{"line":45,"column":24}},"7":{"start":{"line":46,"column":4},"end":{"line":48,"column":5}},"8":{"start":{"line":47,"column":8},"end":{"line":47,"column":58}},"9":{"start":{"line":49,"column":4},"end":{"line":49,"column":76}},"10":{"start":{"line":50,"column":4},"end":{"line":58,"column":7}},"11":{"start":{"line":51,"column":8},"end":{"line":57,"column":9}},"12":{"start":{"line":52,"column":12},"end":{"line":54,"column":13}},"13":{"start":{"line":53,"column":16},"end":{"line":53,"column":45}},"14":{"start":{"line":56,"column":12},"end":{"line":56,"column":34}},"15":{"start":{"line":60,"column":4},"end":{"line":62,"column":5}},"16":{"start":{"line":61,"column":8},"end":{"line":61,"column":45}},"17":{"start":{"line":64,"column":4},"end":{"line":64,"column":22}},"18":{"start":{"line":67,"column":0},"end":{"line":75,"column":1}},"19":{"start":{"line":68,"column":4},"end":{"line":70,"column":5}},"20":{"start":{"line":69,"column":8},"end":{"line":69,"column":21}},"21":{"start":{"line":72,"column":4},"end":{"line":74,"column":7}},"22":{"start":{"line":73,"column":8},"end":{"line":73,"column":55}},"23":{"start":{"line":77,"column":0},"end":{"line":88,"column":1}},"24":{"start":{"line":78,"column":4},"end":{"line":78,"column":100}},"25":{"start":{"line":79,"column":4},"end":{"line":81,"column":5}},"26":{"start":{"line":80,"column":8},"end":{"line":80,"column":21}},"27":{"start":{"line":82,"column":4},"end":{"line":84,"column":5}},"28":{"start":{"line":83,"column":8},"end":{"line":83,"column":21}},"29":{"start":{"line":85,"column":4},"end":{"line":85,"column":31}},"30":{"start":{"line":86,"column":4},"end":{"line":86,"column":55}},"31":{"start":{"line":87,"column":4},"end":{"line":87,"column":16}},"32":{"start":{"line":90,"column":0},"end":{"line":131,"column":1}},"33":{"start":{"line":91,"column":4},"end":{"line":100,"column":19}},"34":{"start":{"line":102,"column":4},"end":{"line":128,"column":5}},"35":{"start":{"line":103,"column":8},"end":{"line":103,"column":54}},"36":{"start":{"line":104,"column":8},"end":{"line":104,"column":40}},"37":{"start":{"line":105,"column":8},"end":{"line":107,"column":9}},"38":{"start":{"line":106,"column":12},"end":{"line":106,"column":34}},"39":{"start":{"line":109,"column":8},"end":{"line":118,"column":9}},"40":{"start":{"line":110,"column":12},"end":{"line":110,"column":75}},"41":{"start":{"line":111,"column":12},"end":{"line":113,"column":13}},"42":{"start":{"line":112,"column":16},"end":{"line":112,"column":46}},"43":{"start":{"line":114,"column":12},"end":{"line":114,"column":80}},"44":{"start":{"line":115,"column":12},"end":{"line":117,"column":13}},"45":{"start":{"line":116,"column":16},"end":{"line":116,"column":51}},"46":{"start":{"line":120,"column":8},"end":{"line":122,"column":9}},"47":{"start":{"line":121,"column":12},"end":{"line":121,"column":57}},"48":{"start":{"line":125,"column":8},"end":{"line":127,"column":9}},"49":{"start":{"line":126,"column":12},"end":{"line":126,"column":33}},"50":{"start":{"line":130,"column":4},"end":{"line":130,"column":15}},"51":{"start":{"line":133,"column":0},"end":{"line":168,"column":1}},"52":{"start":{"line":134,"column":4},"end":{"line":134,"column":25}},"53":{"start":{"line":136,"column":4},"end":{"line":136,"column":61}},"54":{"start":{"line":137,"column":4},"end":{"line":137,"column":33}},"55":{"start":{"line":139,"column":4},"end":{"line":139,"column":50}},"56":{"start":{"line":141,"column":4},"end":{"line":141,"column":29}},"57":{"start":{"line":142,"column":4},"end":{"line":163,"column":6}},"58":{"start":{"line":150,"column":16},"end":{"line":150,"column":41}},"59":{"start":{"line":153,"column":16},"end":{"line":160,"column":17}},"60":{"start":{"line":154,"column":20},"end":{"line":154,"column":34}},"61":{"start":{"line":156,"column":20},"end":{"line":159,"column":22}},"62":{"start":{"line":157,"column":46},"end":{"line":157,"column":98}},"63":{"start":{"line":164,"column":4},"end":{"line":166,"column":5}},"64":{"start":{"line":165,"column":8},"end":{"line":165,"column":80}},"65":{"start":{"line":167,"column":4},"end":{"line":167,"column":28}},"66":{"start":{"line":170,"column":0},"end":{"line":221,"column":1}},"67":{"start":{"line":171,"column":4},"end":{"line":220,"column":7}},"68":{"start":{"line":180,"column":8},"end":{"line":180,"column":37}},"69":{"start":{"line":181,"column":8},"end":{"line":181,"column":32}},"70":{"start":{"line":183,"column":8},"end":{"line":206,"column":9}},"71":{"start":{"line":184,"column":12},"end":{"line":197,"column":13}},"72":{"start":{"line":185,"column":16},"end":{"line":194,"column":17}},"73":{"start":{"line":186,"column":20},"end":{"line":186,"column":47}},"74":{"start":{"line":187,"column":20},"end":{"line":191,"column":21}},"75":{"start":{"line":188,"column":24},"end":{"line":188,"column":53}},"76":{"start":{"line":190,"column":24},"end":{"line":190,"column":42}},"77":{"start":{"line":193,"column":20},"end":{"line":193,"column":38}},"78":{"start":{"line":196,"column":16},"end":{"line":196,"column":97}},"79":{"start":{"line":199,"column":12},"end":{"line":199,"column":40}},"80":{"start":{"line":200,"column":12},"end":{"line":200,"column":36}},"81":{"start":{"line":201,"column":12},"end":{"line":201,"column":39}},"82":{"start":{"line":202,"column":12},"end":{"line":205,"column":13}},"83":{"start":{"line":203,"column":16},"end":{"line":203,"column":45}},"84":{"start":{"line":204,"column":16},"end":{"line":204,"column":41}},"85":{"start":{"line":208,"column":8},"end":{"line":208,"column":33}},"86":{"start":{"line":210,"column":8},"end":{"line":219,"column":9}},"87":{"start":{"line":212,"column":12},"end":{"line":212,"column":45}},"88":{"start":{"line":213,"column":12},"end":{"line":213,"column":31}},"89":{"start":{"line":214,"column":12},"end":{"line":214,"column":42}},"90":{"start":{"line":216,"column":12},"end":{"line":216,"column":53}},"91":{"start":{"line":218,"column":12},"end":{"line":218,"column":54}},"92":{"start":{"line":226,"column":0},"end":{"line":291,"column":2}},"93":{"start":{"line":241,"column":8},"end":{"line":241,"column":71}},"94":{"start":{"line":257,"column":8},"end":{"line":257,"column":71}},"95":{"start":{"line":274,"column":8},"end":{"line":274,"column":72}},"96":{"start":{"line":289,"column":8},"end":{"line":289,"column":74}}},"branchMap":{"1":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":0},"end":{"line":38,"column":0}},{"start":{"line":38,"column":0},"end":{"line":38,"column":0}}]},"2":{"line":46,"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":46,"column":4}},{"start":{"line":46,"column":4},"end":{"line":46,"column":4}}]},"3":{"line":49,"type":"binary-expr","locations":[{"start":{"line":49,"column":27},"end":{"line":49,"column":48}},{"start":{"line":49,"column":52},"end":{"line":49,"column":74}}]},"4":{"line":51,"type":"if","locations":[{"start":{"line":51,"column":8},"end":{"line":51,"column":8}},{"start":{"line":51,"column":8},"end":{"line":51,"column":8}}]},"5":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":12},"end":{"line":52,"column":12}},{"start":{"line":52,"column":12},"end":{"line":52,"column":12}}]},"6":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":4},"end":{"line":60,"column":4}},{"start":{"line":60,"column":4},"end":{"line":60,"column":4}}]},"7":{"line":60,"type":"binary-expr","locations":[{"start":{"line":60,"column":8},"end":{"line":60,"column":23}},{"start":{"line":60,"column":27},"end":{"line":60,"column":52}}]},"8":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":4},"end":{"line":68,"column":4}},{"start":{"line":68,"column":4},"end":{"line":68,"column":4}}]},"9":{"line":78,"type":"binary-expr","locations":[{"start":{"line":78,"column":24},"end":{"line":78,"column":45}},{"start":{"line":78,"column":49},"end":{"line":78,"column":70}},{"start":{"line":78,"column":74},"end":{"line":78,"column":98}}]},"10":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":4},"end":{"line":79,"column":4}},{"start":{"line":79,"column":4},"end":{"line":79,"column":4}}]},"11":{"line":79,"type":"binary-expr","locations":[{"start":{"line":79,"column":8},"end":{"line":79,"column":21}},{"start":{"line":79,"column":25},"end":{"line":79,"column":49}}]},"12":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":4},"end":{"line":82,"column":4}},{"start":{"line":82,"column":4},"end":{"line":82,"column":4}}]},"13":{"line":82,"type":"binary-expr","locations":[{"start":{"line":82,"column":9},"end":{"line":82,"column":25}},{"start":{"line":82,"column":29},"end":{"line":82,"column":47}},{"start":{"line":82,"column":51},"end":{"line":82,"column":69}},{"start":{"line":82,"column":74},"end":{"line":82,"column":126}}]},"14":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":30},"end":{"line":92,"column":53}},{"start":{"line":92,"column":57},"end":{"line":92,"column":62}}]},"15":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":4},"end":{"line":102,"column":4}},{"start":{"line":102,"column":4},"end":{"line":102,"column":4}}]},"16":{"line":103,"type":"binary-expr","locations":[{"start":{"line":103,"column":18},"end":{"line":103,"column":32}},{"start":{"line":103,"column":36},"end":{"line":103,"column":53}}]},"17":{"line":105,"type":"if","locations":[{"start":{"line":105,"column":8},"end":{"line":105,"column":8}},{"start":{"line":105,"column":8},"end":{"line":105,"column":8}}]},"18":{"line":105,"type":"binary-expr","locations":[{"start":{"line":105,"column":12},"end":{"line":105,"column":31}},{"start":{"line":105,"column":35},"end":{"line":105,"column":46}}]},"19":{"line":109,"type":"if","locations":[{"start":{"line":109,"column":8},"end":{"line":109,"column":8}},{"start":{"line":109,"column":8},"end":{"line":109,"column":8}}]},"20":{"line":110,"type":"binary-expr","locations":[{"start":{"line":110,"column":32},"end":{"line":110,"column":44}},{"start":{"line":110,"column":48},"end":{"line":110,"column":69}}]},"21":{"line":111,"type":"if","locations":[{"start":{"line":111,"column":12},"end":{"line":111,"column":12}},{"start":{"line":111,"column":12},"end":{"line":111,"column":12}}]},"22":{"line":111,"type":"binary-expr","locations":[{"start":{"line":111,"column":16},"end":{"line":111,"column":36}},{"start":{"line":111,"column":40},"end":{"line":111,"column":52}}]},"23":{"line":114,"type":"binary-expr","locations":[{"start":{"line":114,"column":34},"end":{"line":114,"column":46}},{"start":{"line":114,"column":50},"end":{"line":114,"column":74}}]},"24":{"line":115,"type":"if","locations":[{"start":{"line":115,"column":12},"end":{"line":115,"column":12}},{"start":{"line":115,"column":12},"end":{"line":115,"column":12}}]},"25":{"line":115,"type":"binary-expr","locations":[{"start":{"line":115,"column":16},"end":{"line":115,"column":38}},{"start":{"line":115,"column":42},"end":{"line":115,"column":57}}]},"26":{"line":120,"type":"if","locations":[{"start":{"line":120,"column":8},"end":{"line":120,"column":8}},{"start":{"line":120,"column":8},"end":{"line":120,"column":8}}]},"27":{"line":125,"type":"if","locations":[{"start":{"line":125,"column":8},"end":{"line":125,"column":8}},{"start":{"line":125,"column":8},"end":{"line":125,"column":8}}]},"28":{"line":139,"type":"binary-expr","locations":[{"start":{"line":139,"column":17},"end":{"line":139,"column":27}},{"start":{"line":139,"column":31},"end":{"line":139,"column":49}}]},"29":{"line":153,"type":"if","locations":[{"start":{"line":153,"column":16},"end":{"line":153,"column":16}},{"start":{"line":153,"column":16},"end":{"line":153,"column":16}}]},"30":{"line":164,"type":"if","locations":[{"start":{"line":164,"column":4},"end":{"line":164,"column":4}},{"start":{"line":164,"column":4},"end":{"line":164,"column":4}}]},"31":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":8},"end":{"line":164,"column":26}},{"start":{"line":164,"column":30},"end":{"line":164,"column":43}}]},"32":{"line":165,"type":"cond-expr","locations":[{"start":{"line":165,"column":52},"end":{"line":165,"column":72}},{"start":{"line":165,"column":75},"end":{"line":165,"column":79}}]},"33":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":16},"end":{"line":173,"column":30}},{"start":{"line":173,"column":34},"end":{"line":173,"column":44}}]},"34":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":8},"end":{"line":183,"column":8}},{"start":{"line":183,"column":8},"end":{"line":183,"column":8}}]},"35":{"line":183,"type":"binary-expr","locations":[{"start":{"line":183,"column":12},"end":{"line":183,"column":16}},{"start":{"line":183,"column":21},"end":{"line":183,"column":33}},{"start":{"line":183,"column":38},"end":{"line":183,"column":51}},{"start":{"line":183,"column":55},"end":{"line":183,"column":67}}]},"36":{"line":184,"type":"if","locations":[{"start":{"line":184,"column":12},"end":{"line":184,"column":12}},{"start":{"line":184,"column":12},"end":{"line":184,"column":12}}]},"37":{"line":187,"type":"if","locations":[{"start":{"line":187,"column":20},"end":{"line":187,"column":20}},{"start":{"line":187,"column":20},"end":{"line":187,"column":20}}]},"38":{"line":196,"type":"cond-expr","locations":[{"start":{"line":196,"column":38},"end":{"line":196,"column":55}},{"start":{"line":196,"column":58},"end":{"line":196,"column":96}}]},"39":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":23},"end":{"line":201,"column":30}},{"start":{"line":201,"column":34},"end":{"line":201,"column":38}}]},"40":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":12},"end":{"line":202,"column":12}},{"start":{"line":202,"column":12},"end":{"line":202,"column":12}}]},"41":{"line":210,"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":210,"column":8}},{"start":{"line":210,"column":8},"end":{"line":210,"column":8}}]}},"code":["/**"," * Copyright 2014, Yahoo! Inc."," * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","/*jslint nomen:true,plusplus:true*/","/**"," * @module rest-http"," */","","/*"," * Default configurations:"," *   timeout: timeout (in ms) for each request"," *   retry: retry related settings, such as retry interval amount (in ms), max_retries."," *          Note that only retry only applies on GET."," */","var _ = {","        forEach: require('lodash/forEach'),","        some: require('lodash/some'),","        delay: require('lodash/delay'),","        isNumber: require('lodash/isNumber')","    },","    DEFAULT_CONFIG = {","        retry: {","            interval: 200,","            max_retries: 0","        }","    },","    CONTENT_TYPE = 'Content-Type',","    TYPE_JSON = 'application/json',","    METHOD_GET = 'GET',","    METHOD_PUT = 'PUT',","    METHOD_POST = 'POST',","    METHOD_DELETE = 'DELETE',","    NULL = null,","    xhr = require('xhr');","","//trim polyfill, maybe pull from npm later","if (!String.prototype.trim) {","  String.prototype.trim = function () {","    return this.replace(/^\\s+|\\s+$/g, '');","  };","}","","function normalizeHeaders(headers, method, isCors) {","    var normalized = {};","    if (!isCors) {","        normalized['X-Requested-With'] = 'XMLHttpRequest';","    }","    var needContentType = (method === METHOD_PUT || method === METHOD_POST);","    _.forEach(headers, function (v, field) {","        if (field.toLowerCase() === 'content-type') {","            if (needContentType) {","                normalized[CONTENT_TYPE] = v;","            }","        } else {","            normalized[field] = v;","        }","    });","","    if (needContentType && !normalized[CONTENT_TYPE]) {","        normalized[CONTENT_TYPE] = TYPE_JSON;","    }","","    return normalized;","}","","function isContentTypeJSON(headers) {","    if (!headers[CONTENT_TYPE]) {","        return false;","    }","","    return _.some(headers[CONTENT_TYPE].split(';'), function (part) {","        return part.trim().toLowerCase() === TYPE_JSON;","    });","}","","function shouldRetry(method, config, statusCode) {","    var isIdempotent = (method === METHOD_GET || method === METHOD_PUT || method === METHOD_DELETE);","    if (!isIdempotent && !config.unsafeAllowRetry) {","        return false;","    }","    if ((statusCode !== 0 && statusCode !== 408 && statusCode !== 999) || config.tmp.retry_counter >= config.retry.max_retries) {","        return false;","    }","    config.tmp.retry_counter++;","    config.retry.interval =  config.retry.interval * 2;","    return true;","}","","function mergeConfig(config) {","    var cfg = {","            unsafeAllowRetry: config.unsafeAllowRetry || false,","            retry: {","                interval: DEFAULT_CONFIG.retry.interval,","                max_retries: DEFAULT_CONFIG.retry.max_retries","            }","        }, // Performant-but-verbose way of cloning the default config as base","        timeout,","        interval,","        maxRetries;","","    if (config) {","        timeout = config.timeout || config.xhrTimeout;","        timeout = parseInt(timeout, 10);","        if (_.isNumber(timeout) && timeout > 0) {","            cfg.timeout = timeout;","        }","","        if (config.retry) {","            interval = parseInt(config.retry && config.retry.interval, 10);","            if (_.isNumber(interval) && interval > 0) {","                cfg.retry.interval = interval;","            }","            maxRetries = parseInt(config.retry && config.retry.max_retries, 10);","            if (_.isNumber(maxRetries) && maxRetries >= 0) {","                cfg.retry.max_retries = maxRetries;","            }","        }","","        if (config.withCredentials) {","            cfg.withCredentials = config.withCredentials;","        }","","        // tmp stores transient state data, such as retry count","        if (config.tmp) {","            cfg.tmp = config.tmp;","        }","    }","","    return cfg;","}","","function doXhr(method, url, headers, data, config, callback) {","    var options, timeout;","","    headers = normalizeHeaders(headers, method, config.cors);","    config = mergeConfig(config);","    // use config.tmp to store temporary values","    config.tmp = config.tmp || {retry_counter: 0};","","    timeout = config.timeout;","    options = {","        method : method,","        timeout : timeout,","        headers: headers,","        useXDR: config.useXDR,","        withCredentials: config.withCredentials,","        on : {","            success : function (err, response) {","                callback(NULL, response);","            },","            failure : function (err, response) {","                if (!shouldRetry(method, config, response.statusCode)) {","                    callback(err);","                } else {","                    _.delay(","                        function retryXHR() { doXhr(method, url, headers, data, config, callback); },","                        config.retry.interval","                    );","                }","            }","        }","    };","    if (data !== undefined && data !== NULL) {","        options.data = isContentTypeJSON(headers) ? JSON.stringify(data) : data;","    }","    return io(url, options);","}","","function io(url, options) {","    return xhr({","        url: url,","        method: options.method || METHOD_GET,","        timeout: options.timeout,","        headers: options.headers,","        body: options.data,","        useXDR: options.cors,","        withCredentials: options.withCredentials","    }, function (err, resp, body) {","        var status = resp.statusCode;","        var errMessage, errBody;","","        if (!err && (status === 0 || (status >= 400 && status < 600))) {","            if (typeof body === 'string') {","                try {","                    errBody = JSON.parse(body);","                    if (errBody.message) {","                        errMessage = errBody.message;","                    } else {","                        errMessage = body;","                    }","                } catch(e) {","                    errMessage = body;","                }","            } else {","                errMessage = status ? 'Error ' + status : 'Internal Fetchr XMLHttpRequest Error';","            }","","            err = new Error(errMessage);","            err.statusCode = status;","            err.body = errBody || body;","            if (err.body) {","                err.output = err.body.output;","                err.meta = err.body.meta;","            }","        }","","        resp.responseText = body;","","        if (err) {","            // getting detail info from xhr module","            err.rawRequest = resp.rawRequest;","            err.url = resp.url;","            err.timeout = options.timeout;","","            options.on.failure.call(null, err, resp);","        } else {","            options.on.success.call(null, null, resp);","        }","    });","}","","/**"," * @class REST.HTTP"," */","module.exports = {","    /**","     * @method get","     * @public","     * @param {String} url","     * @param {Object} headers","     * @param {Object} config  The config object.","     * @param {Number} [config.timeout=3000] Timeout (in ms) for each request","     * @param {Object} config.retry   Retry config object.","     * @param {Number} [config.retry.interval=200]  The start interval unit (in ms).","     * @param {Number} [config.retry.max_retries=2]   Number of max retries.","     * @param {Boolean} [config.cors] Whether to enable CORS & use XDR on IE8/9.","     * @param {Function} callback The callback function, with two params (error, response)","     */","    get : function (url, headers, config, callback) {","        return doXhr(METHOD_GET, url, headers, NULL, config, callback);","    },","","    /**","     * @method put","     * @param {String} url","     * @param {Object} headers","     * @param {Mixed}  data","     * @param {Object} config  The config object. No retries for PUT.","     * @param {Number} [config.timeout=3000] Timeout (in ms) for each request","     * @param {Number} [config.retry.interval=200]  The start interval unit (in ms).","     * @param {Number} [config.retry.max_retries=2]   Number of max retries.","     * @param {Boolean} [config.cors] Whether to enable CORS & use XDR on IE8/9.","     * @param {Function} callback The callback function, with two params (error, response)","     */","    put : function (url, headers, data, config, callback) {","        return doXhr(METHOD_PUT, url, headers, data, config, callback);","    },","","    /**","     * @method post","     * @param {String} url","     * @param {Object} headers","     * @param {Mixed}  data","     * @param {Object} config  The config object. No retries for POST.","     * @param {Number} [config.timeout=3000] Timeout (in ms) for each request","     * @param {Boolean} [config.unsafeAllowRetry=false] Whether to allow retrying this post.","     * @param {Number} [config.retry.interval=200]  The start interval unit (in ms).","     * @param {Number} [config.retry.max_retries=2]   Number of max retries.","     * @param {Boolean} [config.cors] Whether to enable CORS & use XDR on IE8/9.","     * @param {Function} callback The callback function, with two params (error, response)","     */","    post : function (url, headers, data, config, callback) {","        return doXhr(METHOD_POST, url, headers, data, config, callback);","    },","","    /**","     * @method delete","     * @param {String} url","     * @param {Object} headers","     * @param {Object} config  The config object. No retries for DELETE.","     * @param {Number} [config.timeout=3000] Timeout (in ms) for each request","     * @param {Number} [config.retry.interval=200]  The start interval unit (in ms).","     * @param {Number} [config.retry.max_retries=2]   Number of max retries.","     * @param {Boolean} [config.cors] Whether to enable CORS & use XDR on IE8/9.","     * @param {Function} callback The callback function, with two params (error, response)","     */","    'delete' : function (url, headers, config, callback) {","        return doXhr(METHOD_DELETE, url, headers, NULL, config, callback);","    }","};",""],"l":{"16":1,"38":1,"39":0,"40":0,"44":1,"45":0,"46":0,"47":0,"49":0,"50":0,"51":0,"52":0,"53":0,"56":0,"60":0,"61":0,"64":0,"67":1,"68":0,"69":0,"72":0,"73":0,"77":1,"78":0,"79":0,"80":0,"82":0,"83":0,"85":0,"86":0,"87":0,"90":1,"91":0,"102":0,"103":0,"104":0,"105":0,"106":0,"109":0,"110":0,"111":0,"112":0,"114":0,"115":0,"116":0,"120":0,"121":0,"125":0,"126":0,"130":0,"133":1,"134":0,"136":0,"137":0,"139":0,"141":0,"142":0,"150":0,"153":0,"154":0,"156":0,"157":0,"164":0,"165":0,"167":0,"170":1,"171":0,"180":0,"181":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"190":0,"193":0,"196":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"208":0,"210":0,"212":0,"213":0,"214":0,"216":0,"218":0,"226":1,"241":0,"257":0,"274":0,"289":0}},"/home/travis/build/npmtest/node-npmtest-fetchr/node_modules/fetchr/libs/util/defaultConstructGetUri.js":{"path":"/home/travis/build/npmtest/node-npmtest-fetchr/node_modules/fetchr/libs/util/defaultConstructGetUri.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0},"fnMap":{"1":{"name":"jsonifyComplexType","line":14,"loc":{"start":{"line":14,"column":0},"end":{"line":14,"column":35}}},"2":{"name":"defaultConstructGetUri","line":31,"loc":{"start":{"line":31,"column":17},"end":{"line":31,"column":93}}},"3":{"name":"eachParam","line":39,"loc":{"start":{"line":39,"column":31},"end":{"line":39,"column":56}}},"4":{"name":"eachContext","line":53,"loc":{"start":{"line":53,"column":32},"end":{"line":53,"column":59}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":7,"column":63}},"2":{"start":{"line":8,"column":0},"end":{"line":12,"column":2}},"3":{"start":{"line":14,"column":0},"end":{"line":19,"column":1}},"4":{"start":{"line":15,"column":4},"end":{"line":17,"column":5}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":37}},"6":{"start":{"line":18,"column":4},"end":{"line":18,"column":17}},"7":{"start":{"line":31,"column":0},"end":{"line":69,"column":2}},"8":{"start":{"line":32,"column":4},"end":{"line":32,"column":19}},"9":{"start":{"line":33,"column":4},"end":{"line":33,"column":20}},"10":{"start":{"line":34,"column":4},"end":{"line":34,"column":35}},"11":{"start":{"line":35,"column":4},"end":{"line":35,"column":15}},"12":{"start":{"line":36,"column":4},"end":{"line":36,"column":45}},"13":{"start":{"line":38,"column":4},"end":{"line":50,"column":5}},"14":{"start":{"line":39,"column":8},"end":{"line":49,"column":11}},"15":{"start":{"line":40,"column":12},"end":{"line":48,"column":13}},"16":{"start":{"line":41,"column":16},"end":{"line":41,"column":47}},"17":{"start":{"line":42,"column":19},"end":{"line":48,"column":13}},"18":{"start":{"line":43,"column":16},"end":{"line":47,"column":17}},"19":{"start":{"line":44,"column":20},"end":{"line":44,"column":85}},"20":{"start":{"line":46,"column":20},"end":{"line":46,"column":63}},"21":{"start":{"line":52,"column":4},"end":{"line":56,"column":5}},"22":{"start":{"line":53,"column":8},"end":{"line":55,"column":11}},"23":{"start":{"line":54,"column":12},"end":{"line":54,"column":76}},"24":{"start":{"line":58,"column":4},"end":{"line":60,"column":5}},"25":{"start":{"line":59,"column":8},"end":{"line":59,"column":51}},"26":{"start":{"line":61,"column":4},"end":{"line":63,"column":5}},"27":{"start":{"line":62,"column":8},"end":{"line":62,"column":51}},"28":{"start":{"line":64,"column":4},"end":{"line":66,"column":5}},"29":{"start":{"line":65,"column":8},"end":{"line":65,"column":50}},"30":{"start":{"line":67,"column":4},"end":{"line":67,"column":45}},"31":{"start":{"line":68,"column":4},"end":{"line":68,"column":21}}},"branchMap":{"1":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]},"2":{"line":15,"type":"binary-expr","locations":[{"start":{"line":15,"column":8},"end":{"line":15,"column":29}},{"start":{"line":15,"column":33},"end":{"line":15,"column":55}}]},"3":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":4},"end":{"line":38,"column":4}},{"start":{"line":38,"column":4},"end":{"line":38,"column":4}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":12},"end":{"line":40,"column":12}},{"start":{"line":40,"column":12},"end":{"line":40,"column":12}}]},"5":{"line":42,"type":"if","locations":[{"start":{"line":42,"column":19},"end":{"line":42,"column":19}},{"start":{"line":42,"column":19},"end":{"line":42,"column":19}}]},"6":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":4},"end":{"line":52,"column":4}},{"start":{"line":52,"column":4},"end":{"line":52,"column":4}}]},"7":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":4},"end":{"line":58,"column":4}},{"start":{"line":58,"column":4},"end":{"line":58,"column":4}}]},"8":{"line":61,"type":"if","locations":[{"start":{"line":61,"column":4},"end":{"line":61,"column":4}},{"start":{"line":61,"column":4},"end":{"line":61,"column":4}}]},"9":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":4},"end":{"line":64,"column":4}},{"start":{"line":64,"column":4},"end":{"line":64,"column":4}}]}},"code":["/**"," * Copyright 2015, Yahoo! Inc."," * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms."," */","'use strict';","","var debug = require('debug')('Fetcher:defaultConstructGetUri');","var lodash = {","    forEach: require('lodash/forEach'),","    isArray: require('lodash/isArray'),","    isObject: require('lodash/isObject')","};","","function jsonifyComplexType(value) {","    if (lodash.isArray(value) || lodash.isObject(value)) {","        return JSON.stringify(value);","    }","    return value;","}","","/**"," * Construct xhr GET URI."," * @method defaultConstructGetUri"," * @param {String} uri base URI"," * @param {String} resource Resource name"," * @param {Object} params Parameters to be serialized"," * @param {Object} config Configuration object"," * @param {String} config.id_param  Name of the id parameter"," * @param {Object} context Context object, which will become query params"," */","module.exports = function defaultConstructGetUri(baseUri, resource, params, config, context) {","    var query = [];","    var matrix = [];","    var id_param = config.id_param;","    var id_val;","    var final_uri = baseUri + '/' + resource;","","    if (params) {","        lodash.forEach(params, function eachParam(v, k) {","            if (k === id_param) {","                id_val = encodeURIComponent(v);","            } else if (v !== undefined) {","                try {","                    matrix.push(k + '=' + encodeURIComponent(jsonifyComplexType(v)));","                } catch (err) {","                    debug('jsonifyComplexType failed: ' + err);","                }","            }","        });","    }","","    if (context) {","        lodash.forEach(context, function eachContext(v, k) {","            query.push(k + '=' + encodeURIComponent(jsonifyComplexType(v)));","        });","    }","","    if (id_val) {","        final_uri += '/' + id_param + '/' + id_val;","    }","    if (matrix.length > 0) {","        final_uri += ';' + matrix.sort().join(';');","    }","    if (query.length > 0) {","        final_uri += '?' + query.sort().join('&');","    }","    debug('constructed get uri:', final_uri);","    return final_uri;","};",""],"l":{"7":1,"8":1,"14":1,"15":0,"16":0,"18":0,"31":1,"32":0,"33":0,"34":0,"35":0,"36":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"46":0,"52":0,"53":0,"54":0,"58":0,"59":0,"61":0,"62":0,"64":0,"65":0,"67":0,"68":0}}}